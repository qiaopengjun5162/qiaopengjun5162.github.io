<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Paxon Qiao&#x27;s Tech Blog</title>
    <subtitle>Paxon Qiao&#x27;s Tech Blog</subtitle>
    <link rel="self" type="application/atom+xml" href="https://qiaopengjun5162.github.io/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-12-14T00:00:00+00:00</updated>
    <id>https://qiaopengjun5162.github.io/atom.xml</id>
    <entry xml:lang="en">
        <title>深入剖析 Go 中的 Hash Tables：原理、实现与应用场景</title>
        <published>2024-12-14T00:00:00+00:00</published>
        <updated>2024-12-14T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/go-hash-tables/"/>
        <id>https://qiaopengjun5162.github.io/go-hash-tables/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/go-hash-tables/">&lt;h1 id=&quot;shen-ru-pou-xi-go-zhong-de-hash-tables-yuan-li-shi-xian-yu-ying-yong-chang-jing&quot;&gt;深入剖析 Go 中的 Hash Tables：原理、实现与应用场景&lt;&#x2F;h1&gt;
&lt;p&gt;在日常开发中，我们经常需要快速查找和存储数据。比如一个水果店的价格表，如果使用传统的查找方法，性能可能无法满足需求。为了解决这一问题，哈希表 (Hash Table) 提供了一种高效的解决方案，在 Go 语言中被称为 Map。本文将从基本原理到实现细节，全面介绍 Hash Table 的工作机制、冲突处理以及如何选择高效的 Hash 函数。&lt;&#x2F;p&gt;
&lt;p&gt;哈希表是一种将键映射到值的数据结构，基于 Hash 函数和数组实现，能够实现 O(1) 时间复杂度的快速查找操作。本文首先引入哈希函数的概念和设计要求，然后解释 Hash Table 的内部逻辑和常见使用场景。为了确保性能，我们还将探讨如何处理键冲突、优化装载因子，并选择合适的 Hash 函数。在 Go 语言中，Hash Table 是通过 map 类型实现的，本文会附上代码示例帮助理解。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shu-ju-jie-gou-in-golang-hash-tables-ha-xi-biao&quot;&gt;数据结构 in Golang：Hash Tables（哈希表）&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;chang-jing&quot;&gt;场景&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;水果店的价格表：
&lt;ul&gt;
&lt;li&gt;苹果 Apple：3元&lt;&#x2F;li&gt;
&lt;li&gt;香蕉 Banana：4元&lt;&#x2F;li&gt;
&lt;li&gt;桃子 Peach：2元&lt;&#x2F;li&gt;
&lt;li&gt;梨 Pear：3元&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;找到一种水果的价格：
&lt;ul&gt;
&lt;li&gt;可以使用 binary search，通过名称来查找，耗时：O(logn)&lt;&#x2F;li&gt;
&lt;li&gt;如何只耗时 O(1) 来找到价格呢？&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;hash-han-shu&quot;&gt;Hash 函数&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Hash 函数：通过一个字符串 -&amp;gt; 一个数值&lt;&#x2F;li&gt;
&lt;li&gt;例如：
&lt;ul&gt;
&lt;li&gt;“Apple”  -&amp;gt;  1&lt;&#x2F;li&gt;
&lt;li&gt;“Banana”  -&amp;gt; 2&lt;&#x2F;li&gt;
&lt;li&gt;“Peach”  -&amp;gt;  7&lt;&#x2F;li&gt;
&lt;li&gt;“Pear”  -&amp;gt; 8&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;将字符串映射为数值&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;hash-han-shu-de-yao-qiu&quot;&gt;Hash 函数的要求&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;一致性&lt;&#x2F;li&gt;
&lt;li&gt;将不同的字符串映射为不同的数值&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;hash-han-shu-you-shen-me-yong&quot;&gt;Hash 函数有什么用？&lt;&#x2F;h3&gt;
&lt;p&gt;方便 快捷的得到自己想要的值…&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hash-table&quot;&gt;Hash Table&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Hash 函数 + 数组 = Hash Table&lt;&#x2F;li&gt;
&lt;li&gt;数组直接映射到内存&lt;&#x2F;li&gt;
&lt;li&gt;Hash Table 具有额外的逻辑，它使用 Hash 函数智能的找到存放元素的位置&lt;&#x2F;li&gt;
&lt;li&gt;在 Go 语言中叫 Map&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span&gt;main
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  dict &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;make&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  dict1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Apple&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Orange&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;其它语言中：Dictionary、Map、Hash Map……&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shi-yong-chang-jing&quot;&gt;使用场景&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;电话簿&lt;&#x2F;li&gt;
&lt;li&gt;DNS 解析&lt;&#x2F;li&gt;
&lt;li&gt;缓存&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;chong-tu&quot;&gt;冲突&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;冲突就是：两个 Key 被安排到了同一个位置&lt;&#x2F;li&gt;
&lt;li&gt;也就是说：K1 != K2，但 H(K1) == H(K2)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jie-jue-chong-tu&quot;&gt;解决冲突&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;开放地址法、再 Hash 法、建立公共溢出区 …&lt;&#x2F;li&gt;
&lt;li&gt;链地址法：链表&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;zhu-yi&quot;&gt;注意&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Hash 函数应尽可能的将 Key 平均的映射&lt;&#x2F;li&gt;
&lt;li&gt;如果链表过长，会让 Hash Table 变得很慢&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;xuan-ze-hash-han-shu&quot;&gt;选择 Hash 函数&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;&#x2F;th&gt;&lt;th&gt;Hash Table 平均&lt;&#x2F;th&gt;&lt;th&gt;Hash Table 最坏&lt;&#x2F;th&gt;&lt;th&gt;数组&lt;&#x2F;th&gt;&lt;th&gt;链表&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;查找&lt;&#x2F;td&gt;&lt;td&gt;O(1)&lt;&#x2F;td&gt;&lt;td&gt;O(n)&lt;&#x2F;td&gt;&lt;td&gt;O(1)&lt;&#x2F;td&gt;&lt;td&gt;O(n)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;bi-mian-chong-tu&quot;&gt;避免冲突&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;装载因子（load factor）要低&lt;&#x2F;li&gt;
&lt;li&gt;一个好的 Hash 函数&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;zhuang-zai-yin-zi-load-factor&quot;&gt;装载因子（load factor）&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;调整大小，Resize
&lt;ul&gt;
&lt;li&gt;例如：load factor 为 75% 的时候，就可以调整大小，通常是原来大小的两倍&lt;&#x2F;li&gt;
&lt;li&gt;注意：调整大小也会花费很多时间&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;xuan-ze-hao-de-hash-han-shu&quot;&gt;选择好的 Hash 函数&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;好的 Hash 函数会将值尽可能的平均分布在数组中&lt;&#x2F;li&gt;
&lt;li&gt;不好的 Hash 函数经常会把值聚集，并产生很多冲突&lt;&#x2F;li&gt;
&lt;li&gt;通常不需要自己编写 Hash 函数，可以了解 SHA 函数&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;Hash Table 是一种兼具速度和灵活性的高效数据结构，广泛应用于缓存、DNS 解析和电话簿等场景。其核心依赖于优秀的 Hash 函数设计和冲突处理策略。在 Golang 中，map 类型简化了 Hash Table 的使用，开发者可以专注于实现业务逻辑而无需关心底层细节。掌握 Hash Table 的原理和最佳实践，对于构建高性能的应用程序至关重要。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Go 语言快速排序：从原理到实现</title>
        <published>2024-12-14T00:00:00+00:00</published>
        <updated>2024-12-14T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/go-quick-sort/"/>
        <id>https://qiaopengjun5162.github.io/go-quick-sort/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/go-quick-sort/">&lt;h1 id=&quot;go-yu-yan-kuai-su-pai-xu-cong-yuan-li-dao-shi-xian&quot;&gt;Go 语言快速排序：从原理到实现&lt;&#x2F;h1&gt;
&lt;p&gt;快速排序 (Quicksort) 是一种基于“分而治之”策略的高效排序算法，其平均时间复杂度为 O(n log n)，在日常开发中广泛使用。相较于选择排序的 O(n²)，快速排序在大数据场景下更具优势。本文将结合实际代码，深入解析快速排序的工作原理与在 Go 语言中的实现方式。&lt;&#x2F;p&gt;
&lt;p&gt;本文介绍了快速排序 (Quicksort) 算法的基本原理、应用场景以及在 Go 语言中的实现步骤。快速排序通过递归和分区策略，将数组分解为更小的子数组，逐步排序直至达到基线条件，最终合并成一个有序数组。本文通过示例代码详细展示了如何在 Go 中实现快速排序，并提供了解释与运行结果，帮助开发者快速掌握这一重要的算法。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;suan-fa-in-golang-quicksort-kuai-su-pai-xu&quot;&gt;算法 in Golang：Quicksort（快速排序）&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;quicksort-kuai-su-pai-xu&quot;&gt;Quicksort（快速排序）&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;快速排序 O(nlog2^n)，比选择排序要快 O(n²)&lt;&#x2F;li&gt;
&lt;li&gt;在日常生活中经常使用&lt;&#x2F;li&gt;
&lt;li&gt;使用了 D &amp;amp; C 策略（分而治之）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shi-yong-quicksort-pai-xu-shu-zu&quot;&gt;使用 Quicksort 排序数组&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;不需要排序的数组（也就是 Base Case 基线条件）：
&lt;ul&gt;
&lt;li&gt;[]，空数组&lt;&#x2F;li&gt;
&lt;li&gt;[s]，单元素数组&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;很容易排序的数组：
&lt;ul&gt;
&lt;li&gt;[a, b]，两个元素的数组，只需检查它们之间的大小即可，调换位置&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;3 个元素的数组（例如 [23, 19, 35]）：
&lt;ul&gt;
&lt;li&gt;使用 D &amp;amp; C 策略，简化至基线条件（Base case）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从数组中随便选一个元素，例如 35，这个元素叫做 pivot（基准元素）&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;找到比 pivot 小的元素，找到比 pivot 大的元素，这叫做分区：[23, 19], (35), []&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;如果左右两个子数组已排好序（达到基线条件），结果：左边 + [pivot] + 右边&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;如果左右两个子数组没排好序（没达到基线条件），那么：&lt;&#x2F;p&gt;
&lt;p&gt;quicksort(左边) + [pivot] + quicksort(右边)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;shi-yong-quicksort-pai-xu-shu-zu-de-bu-zou&quot;&gt;使用 Quicksort 排序数组的步骤&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;选择一个 pivot&lt;&#x2F;li&gt;
&lt;li&gt;将数组分为两个子数组：
&lt;ol&gt;
&lt;li&gt;左侧数组的元素都比 pivot 小&lt;&#x2F;li&gt;
&lt;li&gt;右侧数组的元素都比 pivot 大&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;在两个子数组上递归的调用 quicksort&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;chuang-jian-xiang-mu&quot;&gt;创建项目&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;~&#x2F;Code&#x2F;go via 🐹 v1.20.3 via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜ mcd quicksort
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Code&#x2F;go&#x2F;quicksort via 🐹 v1.20.3 via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜ go mod init quicksort
&lt;&#x2F;span&gt;&lt;span&gt;go: creating new go.mod: module quicksort
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Code&#x2F;go&#x2F;quicksort via 🐹 v1.20.3 via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜ c
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Code&#x2F;go&#x2F;quicksort via 🐹 v1.20.3 via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;main-go-dai-ma&quot;&gt;main.go 代码&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span&gt;main
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;fmt&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt; arr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;87&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;66&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;126&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;328&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;653&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;67&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;98&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;256&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;99&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;109&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;17&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;70&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span&gt;quicksort(arr)
&lt;&#x2F;span&gt;&lt;span&gt; fmt.Println(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;result: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, result)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;quicksort&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;arr &lt;&#x2F;span&gt;&lt;span&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;) []&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(arr) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;arr
&lt;&#x2F;span&gt;&lt;span&gt; }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; pivot &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span&gt;arr[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;left, right []&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;_, ele &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= range &lt;&#x2F;span&gt;&lt;span&gt;arr[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;:] {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;ele &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span&gt;pivot {
&lt;&#x2F;span&gt;&lt;span&gt;   left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(left, ele)
&lt;&#x2F;span&gt;&lt;span&gt;  } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;   right &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(right, ele)
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt; }
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(quicksort(left), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;([]&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;{pivot}, quicksort(right)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;...&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;...&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;yun-xing&quot;&gt;运行&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;Code&#x2F;go&#x2F;quicksort via 🐹 v1.20.3 via 🅒 base 
&lt;&#x2F;span&gt;&lt;span&gt;➜ go run main.go       
&lt;&#x2F;span&gt;&lt;span&gt;result:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;1 1 1 3 4 5 12 12 17 30 66 67 70 87 98 99 109 126 256 328 653&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Code&#x2F;go&#x2F;quicksort via 🐹 v1.20.3 via 🅒 base took 3.2s 
&lt;&#x2F;span&gt;&lt;span&gt;➜ 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;快速排序是一种简单而高效的排序算法，尤其适用于需要对大规模数据进行快速排序的场景。在 Go 语言中实现快速排序相对直观，主要通过递归与分区的方式达到排序目标。通过本文的介绍与代码示例，相信读者能够快速理解其原理与实现，并将其应用到实际项目中，提升程序的性能与效率。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>如何在Polkadot部署智能合约</title>
        <published>2024-12-14T00:00:00+00:00</published>
        <updated>2024-12-14T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/polkadot-contract/"/>
        <id>https://qiaopengjun5162.github.io/polkadot-contract/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/polkadot-contract/">&lt;h1 id=&quot;ru-he-zai-polkadotbu-shu-zhi-neng-he-yue&quot;&gt;如何在Polkadot部署智能合约&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;shi-cao&quot;&gt;实操&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;di-yi-bu-ling-qu-shui-long-tou&quot;&gt;第一步：领取水龙头&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;faucet.polkadot.io&#x2F;&quot;&gt;https:&#x2F;&#x2F;faucet.polkadot.io&#x2F;&lt;&#x2F;a&gt;
Error: Requester has reached their daily quota. Only request once per day.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-er-bu-connect-to-asset-hub&quot;&gt;第二步：Connect to Asset Hub&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;contracts.polkadot.io&#x2F;connect-to-asset-hub&quot;&gt;https:&#x2F;&#x2F;contracts.polkadot.io&#x2F;connect-to-asset-hub&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-san-bu-remix&quot;&gt;第三步：remix&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;remix.polkadot.io&#x2F;&quot;&gt;https:&#x2F;&#x2F;remix.polkadot.io&#x2F;&lt;&#x2F;a&gt;
打开 Auto compile
Connect with MetaMask&lt;&#x2F;p&gt;
&lt;p&gt;合约当做账户
写合约 调用者是谁非常重要&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;参考&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=J1_1VInGY3M&amp;amp;list=PLKgwQU2jh_H8Wq32Bb9N1mcFs4PaW2B7X&amp;amp;index=15&quot;&gt;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=J1_1VInGY3M&amp;amp;list=PLKgwQU2jh_H8Wq32Bb9N1mcFs4PaW2B7X&amp;amp;index=15&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;faucet.polkadot.io&#x2F;&quot;&gt;https:&#x2F;&#x2F;faucet.polkadot.io&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;contracts.polkadot.io&#x2F;&quot;&gt;https:&#x2F;&#x2F;contracts.polkadot.io&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;wiki.polkadot.network&#x2F;docs&#x2F;build-smart-contracts&quot;&gt;https:&#x2F;&#x2F;wiki.polkadot.network&#x2F;docs&#x2F;build-smart-contracts&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;paritytech.github.io&#x2F;polkadot-sdk&#x2F;master&#x2F;frame_support&#x2F;pallet_macros&#x2F;attr.genesis_build.html&quot;&gt;https:&#x2F;&#x2F;paritytech.github.io&#x2F;polkadot-sdk&#x2F;master&#x2F;frame_support&#x2F;pallet_macros&#x2F;attr.genesis_build.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Go 语言中的分而治之 (D &amp; C) 策略：递归算法详解与实践</title>
        <published>2024-12-12T00:00:00+00:00</published>
        <updated>2024-12-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/go-divide-conquer/"/>
        <id>https://qiaopengjun5162.github.io/go-divide-conquer/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/go-divide-conquer/">&lt;h1 id=&quot;go-yu-yan-zhong-de-fen-er-zhi-zhi-d-c-ce-lue-di-gui-suan-fa-xiang-jie-yu-shi-jian&quot;&gt;Go 语言中的分而治之 (D &amp;amp; C) 策略：递归算法详解与实践&lt;&#x2F;h1&gt;
&lt;p&gt;在算法的世界中，Divide &amp;amp; Conquer（分而治之）是一种强大而优雅的策略。它将复杂问题分解为更小的子问题，直至这些子问题能够直接解决。作为递归算法的一种思路，D &amp;amp; C 的关键在于找到基线条件（Base Case）和递归条件（Recursive Case）。本文将结合一个经典问题——数组求和，讲解如何使用 Go 语言实现 D &amp;amp; C 策略，并引导读者从理论到实践，深入理解其核心思想。&lt;&#x2F;p&gt;
&lt;p&gt;本文深入探讨 Divide &amp;amp; Conquer（D &amp;amp; C）算法策略，揭示其作为递归算法思想的核心逻辑。通过简单的示例代码，用 Go 语言实现数组求和的分而治之算法，展示其高效解决问题的思路。同时，文章提供了详细的项目设置和运行指南，为开发者提供实践参考。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;suan-fa-in-golang-d-c-fen-er-zhi-zhi&quot;&gt;算法 in Golang：D &amp;amp; C（分而治之）&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;d-c-suan-fa-ce-lue&quot;&gt;D &amp;amp; C 算法（策略）&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Divide &amp;amp; Conquer&lt;&#x2F;li&gt;
&lt;li&gt;属于递归算法的一种&lt;&#x2F;li&gt;
&lt;li&gt;其实它更像是一种思路、策略&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;di-gui&quot;&gt;递归&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;递归 Recursion
&lt;ul&gt;
&lt;li&gt;基线条件 Base Case&lt;&#x2F;li&gt;
&lt;li&gt;递归条件 Recursive Case&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;d-c-de-bu-zou&quot;&gt;D &amp;amp; C 的步骤&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;找到一个简单的基线条件（Base Case）&lt;&#x2F;li&gt;
&lt;li&gt;把问题分开处理，直到它变为基线条件&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;li-zi&quot;&gt;例子&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;需求：将数组 [1, 3, 5, 7, 9] 求和&lt;&#x2F;li&gt;
&lt;li&gt;思路1：使用循环（例如 for 循环）&lt;&#x2F;li&gt;
&lt;li&gt;思路2：D &amp;amp; C （分而治之）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;li-zi-d-c-ce-lue&quot;&gt;例子：D &amp;amp; C 策略&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;基线条件：空数组 []，其和为0&lt;&#x2F;li&gt;
&lt;li&gt;递归：[1, 3, 5, 7, 9]
&lt;ul&gt;
&lt;li&gt;1 + SUM([3, 5, 7, 9])
&lt;ul&gt;
&lt;li&gt;3 + SUM([5, 7, 9])
&lt;ul&gt;
&lt;li&gt;5 + SUM([7, 9])
&lt;ul&gt;
&lt;li&gt;7 + SUM([9])
&lt;ul&gt;
&lt;li&gt;9 + SUM([])&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;chuang-jian-xiang-mu-bing-yong-vscode-da-kai&quot;&gt;创建项目并用vscode 打开&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;~&#x2F;Code&#x2F;go via 🐹 v1.20.3 via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜ mcd divide_conquer
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Code&#x2F;go&#x2F;divide_conquer via 🐹 v1.20.3 via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜ go mod init divide_conquer
&lt;&#x2F;span&gt;&lt;span&gt;go: creating new go.mod: module divide_conquer
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Code&#x2F;go&#x2F;divide_conquer via 🐹 v1.20.3 via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜ c
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Code&#x2F;go&#x2F;divide_conquer via 🐹 v1.20.3 via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;main-go-dai-ma&quot;&gt;main.go 代码&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span&gt;main
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;fmt&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt; total &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span&gt;sum([]&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span&gt;})
&lt;&#x2F;span&gt;&lt;span&gt; fmt.Println(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;total: &amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, total)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;sum&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;arr &lt;&#x2F;span&gt;&lt;span&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(arr) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt; }
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;arr[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;sum(arr[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;:])
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;yun-xing&quot;&gt;运行&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;Code&#x2F;go&#x2F;divide_conquer via 🐹 v1.20.3 via 🅒 base 
&lt;&#x2F;span&gt;&lt;span&gt;➜ go run .                  
&lt;&#x2F;span&gt;&lt;span&gt;total:  25
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Code&#x2F;go&#x2F;divide_conquer via 🐹 v1.20.3 via 🅒 base 
&lt;&#x2F;span&gt;&lt;span&gt;➜ 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;Divide &amp;amp; Conquer 是解决复杂问题的利器，通过递归分解问题并处理基线条件，其优势在于简洁且易于理解。在本文中，我们使用 Go 语言实践了一个数组求和的 D &amp;amp; C 算法，从项目初始化到代码实现，完整展现了这一过程。希望读者不仅掌握这一策略的基本逻辑，更能将其灵活运用到实际开发中，为优化算法效率提供新思路。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>My first blog post</title>
        <published>2024-12-12T00:00:00+00:00</published>
        <updated>2024-12-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/myblog/"/>
        <id>https://qiaopengjun5162.github.io/myblog/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/myblog/">&lt;p&gt;This is my first blog post.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span&gt;~&#x2F;blog&#x2F;zola via 🅒 base took 8.5s 
&lt;&#x2F;span&gt;&lt;span&gt;➜ 
&lt;&#x2F;span&gt;&lt;span&gt;zola init myblog
&lt;&#x2F;span&gt;&lt;span&gt;Welcome to Zola!
&lt;&#x2F;span&gt;&lt;span&gt;Please answer a few questions to get started quickly.
&lt;&#x2F;span&gt;&lt;span&gt;Any choices made can be changed by modifying the `config.toml` file later.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; What is the URL of your site&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;?&lt;&#x2F;span&gt;&lt;span&gt; (https:&#x2F;&#x2F;example.com)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Do you want to enable Sass compilation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;? [&lt;&#x2F;span&gt;&lt;span&gt;Y&#x2F;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Do you want to enable syntax highlighting&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;? [&lt;&#x2F;span&gt;&lt;span&gt;y&#x2F;N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Do you want to build a search index of the content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;? [&lt;&#x2F;span&gt;&lt;span&gt;y&#x2F;N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;: 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Done! Your site was created in &#x2F;Users&#x2F;qiaopengjun&#x2F;blog&#x2F;zola&#x2F;myblog
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Get started by moving into the directory and using the built-in server: `zola serve`
&lt;&#x2F;span&gt;&lt;span&gt;Visit https:&#x2F;&#x2F;www.getzola.org for the full documentation.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;~&#x2F;blog&#x2F;zola via 🅒 base took 14.4s 
&lt;&#x2F;span&gt;&lt;span&gt;➜ 
&lt;&#x2F;span&gt;&lt;span&gt;ls
&lt;&#x2F;span&gt;&lt;span&gt;myblog
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;~&#x2F;blog&#x2F;zola via 🅒 base 
&lt;&#x2F;span&gt;&lt;span&gt;➜ 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; myblog&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;blog&#x2F;zola&#x2F;myblog via 🅒 base 
&lt;&#x2F;span&gt;&lt;span&gt;➜ 
&lt;&#x2F;span&gt;&lt;span&gt;ls
&lt;&#x2F;span&gt;&lt;span&gt;config.toml content     sass        static      templates   themes
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;blog&#x2F;zola&#x2F;myblog via 🅒 base 
&lt;&#x2F;span&gt;&lt;span&gt;➜ 
&lt;&#x2F;span&gt;&lt;span&gt;gigit clone https:&#x2F;&#x2F;github.com&#x2F;st1020&#x2F;kita.git themes&#x2F;kita
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;正克隆到 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;themes&#x2F;kita&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;警告：重定向到 https:&#x2F;&#x2F;ghp.ci&#x2F;https:&#x2F;&#x2F;github.com&#x2F;st1020&#x2F;kita.git&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;remote: Enumerating objects: 488, done.
&lt;&#x2F;span&gt;&lt;span&gt;remote: Counting objects: 100% (233&#x2F;233), done.
&lt;&#x2F;span&gt;&lt;span&gt;remote: Compressing objects: 100% (92&#x2F;92), done.
&lt;&#x2F;span&gt;&lt;span&gt;remote: Total 488 (delta 179), reused 164 (delta 138), pack-reused 255 (from 1)
&lt;&#x2F;span&gt;&lt;span&gt;接收对象中: 100% (488&#x2F;488), 2.20 MiB &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span&gt;4.69 MiB&#x2F;s, 完成.
&lt;&#x2F;span&gt;&lt;span&gt;处理 delta 中: 100% (288&#x2F;288), 完成.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;blog&#x2F;zola&#x2F;myblog via 🅒 base took 36.4s 
&lt;&#x2F;span&gt;&lt;span&gt;➜ 
&lt;&#x2F;span&gt;&lt;span&gt;c
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.lixueduan.com&#x2F;posts&#x2F;blog&#x2F;02-add-giscus-comment&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.lixueduan.com&#x2F;posts&#x2F;blog&#x2F;02-add-giscus-comment&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>React 学习之 createElement</title>
        <published>2024-04-07T21:12:11+08:00</published>
        <updated>2024-04-07T21:12:11+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/react-createelement/"/>
        <id>https://qiaopengjun5162.github.io/react-createelement/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/react-createelement/">&lt;h1 id=&quot;react-xue-xi-zhi-createelement&quot;&gt;React 学习之 createElement&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;react-yuan-su&quot;&gt;React 元素&lt;&#x2F;h2&gt;
&lt;p&gt;在 React 中，元素是 React 应用的最小构建块。
一个 React 元素是 React 对象的一个轻量级、静态的表示。
它们被 React 用于知道屏幕上什么应该被渲染，并在数据改变时保持 UI 的更新。&lt;&#x2F;p&gt;
&lt;p&gt;React 元素是不可变的：一旦创建，就不能更改它的子元素或属性。
一个元素就像电影的单帧：它代表 UI 在某一时间点的样子。&lt;&#x2F;p&gt;
&lt;p&gt;尽管 React 元素在技术上是一个对象，但它们并不是实际的 DOM 元素。
React 使用这些对象来构建 DOM，并在必要时更新它。
React 元素是 React 的抽象表示，而不是 DOM 的直接表示。&lt;&#x2F;p&gt;
&lt;p&gt;总的来说，React 元素确实可以被视为普通的 JavaScript 对象，但它们在 React 的工作流中扮演着特殊的角色，用于描述 UI 的结构和属性。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;react-createelement&quot;&gt;React.createElement&lt;&#x2F;h3&gt;
&lt;p&gt;用来创建一个React元素&lt;&#x2F;p&gt;
&lt;p&gt;参数：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;标签名 元素的名称（HTML标签必须小写）&lt;&#x2F;li&gt;
&lt;li&gt;属性 标签中的属性
&lt;ul&gt;
&lt;li&gt;在设置事件时，属性名需要修改为驼峰命名法 值为一个函数&lt;&#x2F;li&gt;
&lt;li&gt;例如：onClick 需要修改为 onClick&lt;&#x2F;li&gt;
&lt;li&gt;Warning: Invalid DOM property &lt;code&gt;class&lt;&#x2F;code&gt;. Did you mean &lt;code&gt;className&lt;&#x2F;code&gt;? class -&amp;gt; className&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;子元素 标签中的子元素
&lt;ul&gt;
&lt;li&gt;例如：&lt;div&gt;这是一个div&lt;&#x2F;div&gt; 子元素为“这是一个div“&lt;&#x2F;li&gt;
&lt;li&gt;子元素可以是字符串、数字、React元素、数组、布尔值、null、undefined&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;返回值：一个React元素&lt;&#x2F;li&gt;
&lt;li&gt;注意点：
&lt;ul&gt;
&lt;li&gt;React 元素最终会通过虚拟DOM转换为真实的DOM元素&lt;&#x2F;li&gt;
&lt;li&gt;React 元素是一个普通的JS对象&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;React.createElement 是 React 库中的一个函数，用于在 JavaScript 中创建 React 元素。在 JSX 语法被引入之前，React.createElement 是创建 React 组件树的主要方式。尽管现在 JSX 在 React 社区中非常流行，但理解 React.createElement 仍然很重要，因为它实际上是 JSX 在编译时转换为的东西。&lt;&#x2F;p&gt;
&lt;p&gt;React.createElement 函数接受三个参数：&lt;&#x2F;p&gt;
&lt;p&gt;类型 (type)：这通常是一个字符串（表示一个 DOM 元素，如 ‘div’ 或 ‘span’）或一个 React 组件类（或函数）。
配置对象 (config)：一个可选的对象，包含该元素的 props。
子元素 (children)：可以是任何有效的 React 子元素，可以是一个或多个。
示例：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;javascript&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-javascript &quot;&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;element &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;React.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;createElement&lt;&#x2F;span&gt;&lt;span&gt;(  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;div&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,  
&lt;&#x2F;span&gt;&lt;span&gt;  { id: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;myDiv&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, className: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;myClass&amp;#39; &lt;&#x2F;span&gt;&lt;span&gt;},  
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;Hello, world!&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,  
&lt;&#x2F;span&gt;&lt;span&gt;  React.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;createElement&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;span&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;This is a span.&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)  
&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这个示例创建了一个 div 元素，它有一个 ID 和一个类名，以及两个子元素：一个文本节点和一个 span 元素。&lt;&#x2F;p&gt;
&lt;p&gt;当你使用 JSX 时，上述代码可以写为：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;jsx&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-jsx &quot;&gt;&lt;code class=&quot;language-jsx&quot; data-lang=&quot;jsx&quot;&gt;&lt;span&gt;const element = (  
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;div id=&amp;quot;myDiv&amp;quot; className=&amp;quot;myClass&amp;quot;&amp;gt;  
&lt;&#x2F;span&gt;&lt;span&gt;    Hello, world!  
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;span&amp;gt;This is a span.&amp;lt;&#x2F;span&amp;gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;div&amp;gt;  
&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;尽管 JSX 提供了更简洁、更易于理解的语法，但理解 React.createElement 仍然有助于你理解 React 的底层工作原理。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;react-createelement-shi-li&quot;&gt;React createElement 示例&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;UTF-8&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;viewport&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;width=device-width, initial-scale=1.0&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;React learning&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;script&#x2F;react.development.js&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;script&#x2F;react-dom.development.js&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;button &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;btn&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;我是一个按钮&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;root&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        在 React 中，元素是 React 应用的最小构建块。一个 React 元素是 React 对象的一个轻量级、静态的表示。
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        它们被 React 用于知道屏幕上什么应该被渲染，并在数据改变时保持 UI 的更新。
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        React 元素是不可变的：一旦创建，就不能更改它的子元素或属性。一个元素就像电影的单帧：它代表 UI 在某一时间点的样子。
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        尽管 React 元素在技术上是一个对象，但它们并不是实际的 DOM 元素。
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        React 使用这些对象来构建 DOM，并在必要时更新它。React 元素是 React 的抽象表示，而不是 DOM 的直接表示。
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        总的来说，React 元素确实可以被视为普通的 JavaScript 对象，但它们在 React 的工作流中扮演着特殊的角色，用于描述 UI 的结构和属性。
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        React.createElement
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;            - 用来创建一个React元素
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;            - 参数：
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                - 标签名 元素的名称（HTML标签必须小写）
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                - 属性 标签中的属性
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                    - 在设置事件时，属性名需要修改为驼峰命名法 值为一个函数
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                    - 例如：onClick 需要修改为 onClick 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                    - Warning: Invalid DOM property `class`. Did you mean `className`? class属性需要使用 className 设置
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                - 子元素 元素的内容（子元素）
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;            - 返回值：一个React元素
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;            - 注意点：
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                - React 元素最终会通过虚拟DOM转换为真实的DOM元素
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                - React 元素是一个普通的JS对象
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                - React 元素是不可变的，一旦创建，就不能更改它的子元素或者属性 React 元素一旦创建就无法修改，
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;                    如果想要修改，只能重新创建新的元素，即只能通过新创建的元素进行替换
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;        *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 创建一个React元素
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;button &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;React&lt;&#x2F;span&gt;&lt;span&gt;.createElement(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;button&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;          id: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;btn&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;          type: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;button&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;          className: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;hello&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span&gt;: () &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            alert(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;123&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;          },
&lt;&#x2F;span&gt;&lt;span&gt;        },
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;点我一下&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;      );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 创建一个div
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;React&lt;&#x2F;span&gt;&lt;span&gt;.createElement(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;div&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, {}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;这是一个div&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, button);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 获取根元素
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;root &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;ReactDOM&lt;&#x2F;span&gt;&lt;span&gt;.createRoot(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span&gt;.getElementById(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;root&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 将React元素渲染到根元素中 将元素在根元素中显示
&lt;&#x2F;span&gt;&lt;span&gt;      root.render(div);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 获取按钮对象
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;btn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span&gt;.getElementById(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;btn&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;      btn.addEventListener(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;click&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, () &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 点击按钮后，修改div中button中的文字为 click me
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;button &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;React&lt;&#x2F;span&gt;&lt;span&gt;.createElement(
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;button&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;          {
&lt;&#x2F;span&gt;&lt;span&gt;            id: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;btn&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            type: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;button&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            className: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;hello&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;onClick&lt;&#x2F;span&gt;&lt;span&gt;: () &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;              alert(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;123&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;            },
&lt;&#x2F;span&gt;&lt;span&gt;          },
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;click me&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        );
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 创建一个div
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;React&lt;&#x2F;span&gt;&lt;span&gt;.createElement(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;div&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, {}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;这是一个div&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, button);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 修改React元素后，必须重新渲染React根元素
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 当调用render渲染页面时，React会自动比较两次渲染的元素，只在真实DOM中更新发生变化的部分，没发生变化的保持不变
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 这样可以提高页面的性能
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 重新渲染React根元素
&lt;&#x2F;span&gt;&lt;span&gt;        root.render(div);
&lt;&#x2F;span&gt;&lt;span&gt;      });
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;参考&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;react.docschina.org&#x2F;&quot;&gt;React 官方中文文档&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Dojoup 安装问题解决</title>
        <published>2024-01-18T18:24:19+08:00</published>
        <updated>2024-01-18T18:24:19+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/dojo/"/>
        <id>https://qiaopengjun5162.github.io/dojo/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/dojo/">&lt;h1 id=&quot;dojoup-an-zhuang-wen-ti-jie-jue&quot;&gt;Dojoup 安装问题解决&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;install-dojoup&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;book.dojoengine.org&#x2F;getting-started&#x2F;quick-start.html#install-dojoup&quot;&gt;Install Dojoup&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;book.dojoengine.org&#x2F;getting-started&#x2F;quick-start.html&quot;&gt;https:&#x2F;&#x2F;book.dojoengine.org&#x2F;getting-started&#x2F;quick-start.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;curl -L https:&#x2F;&#x2F;install.dojoengine.org | bash
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;an-zhuang-shi-bai&quot;&gt;安装失败&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;..&#x2F;static&#x2F;images&#x2F;image-20240118182848831.png&quot; alt=&quot;image-20240118182848831&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;dojoup
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;═════════════════════════════════════════════════════════════════════════
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;                  ██████╗  ██████╗      ██╗ ██████╗
&lt;&#x2F;span&gt;&lt;span&gt;                  ██╔══██╗██╔═══██╗     ██║██╔═══██╗
&lt;&#x2F;span&gt;&lt;span&gt;                  ██║  ██║██║   ██║     ██║██║   ██║
&lt;&#x2F;span&gt;&lt;span&gt;                  ██║  ██║██║   ██║██   ██║██║   ██║
&lt;&#x2F;span&gt;&lt;span&gt;                  ██████╔╝╚██████╔╝╚█████╔╝╚██████╔╝
&lt;&#x2F;span&gt;&lt;span&gt;                  ╚═════╝  ╚═════╝  ╚════╝  ╚═════╝
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;              Repo : https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo
&lt;&#x2F;span&gt;&lt;span&gt;              Book : https:&#x2F;&#x2F;book.dojoengine.org&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;              Chat : https:&#x2F;&#x2F;discord.gg&#x2F;dojoengine
&lt;&#x2F;span&gt;&lt;span&gt;                     https:&#x2F;&#x2F;t.me&#x2F;dojoengine
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;═════════════════════════════════════════════════════════════════════════
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installing dojo (version , tag )
&lt;&#x2F;span&gt;&lt;span&gt;https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo&#x2F;releases&#x2F;download&#x2F;&#x2F;dojo__darwin_arm64.tar.gz
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: downloading latest dojo
&lt;&#x2F;span&gt;&lt;span&gt;########################################################################################################################################################## 100.0%
&lt;&#x2F;span&gt;&lt;span&gt;tar: Error opening archive: Unrecognized archive format
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: command failed: tar -xzC &#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;dojoup: line 251: &#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;katana: No such file or directory
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: command failed: &#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;katana --version
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installed -
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: warning:
&lt;&#x2F;span&gt;&lt;span&gt;There are multiple binaries with the name &amp;#39;katana&amp;#39; present in your &amp;#39;PATH&amp;#39;.
&lt;&#x2F;span&gt;&lt;span&gt;This may be the result of installing &amp;#39;katana&amp;#39; using another method,
&lt;&#x2F;span&gt;&lt;span&gt;like Cargo or other package managers.
&lt;&#x2F;span&gt;&lt;span&gt;You may need to run &amp;#39;rm &amp;#39; or move &amp;#39;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;in your &amp;#39;PATH&amp;#39; to allow the newly installed version to take precedence!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;dojoup: line 251: &#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;sozo: No such file or directory
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: command failed: &#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;sozo --version
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installed -
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: warning:
&lt;&#x2F;span&gt;&lt;span&gt;There are multiple binaries with the name &amp;#39;sozo&amp;#39; present in your &amp;#39;PATH&amp;#39;.
&lt;&#x2F;span&gt;&lt;span&gt;This may be the result of installing &amp;#39;sozo&amp;#39; using another method,
&lt;&#x2F;span&gt;&lt;span&gt;like Cargo or other package managers.
&lt;&#x2F;span&gt;&lt;span&gt;You may need to run &amp;#39;rm &amp;#39; or move &amp;#39;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;in your &amp;#39;PATH&amp;#39; to allow the newly installed version to take precedence!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;dojoup: line 251: &#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;torii: No such file or directory
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: command failed: &#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;torii --version
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installed -
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: warning:
&lt;&#x2F;span&gt;&lt;span&gt;There are multiple binaries with the name &amp;#39;torii&amp;#39; present in your &amp;#39;PATH&amp;#39;.
&lt;&#x2F;span&gt;&lt;span&gt;This may be the result of installing &amp;#39;torii&amp;#39; using another method,
&lt;&#x2F;span&gt;&lt;span&gt;like Cargo or other package managers.
&lt;&#x2F;span&gt;&lt;span&gt;You may need to run &amp;#39;rm &amp;#39; or move &amp;#39;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;in your &amp;#39;PATH&amp;#39; to allow the newly installed version to take precedence!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;dojoup: line 251: &#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;dojo-language-server: No such file or directory
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: command failed: &#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&#x2F;dojo-language-server --version
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installed -
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: warning:
&lt;&#x2F;span&gt;&lt;span&gt;There are multiple binaries with the name &amp;#39;dojo-language-server&amp;#39; present in your &amp;#39;PATH&amp;#39;.
&lt;&#x2F;span&gt;&lt;span&gt;This may be the result of installing &amp;#39;dojo-language-server&amp;#39; using another method,
&lt;&#x2F;span&gt;&lt;span&gt;like Cargo or other package managers.
&lt;&#x2F;span&gt;&lt;span&gt;You may need to run &amp;#39;rm &amp;#39; or move &amp;#39;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;in your &amp;#39;PATH&amp;#39; to allow the newly installed version to take precedence!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: done!
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;jie-jue-wen-ti&quot;&gt;解决问题&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;di-yi-bu&quot;&gt;第一步&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;cacargo install --git https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo --force sozo katana torii
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    Updating git repository `https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo`
&lt;&#x2F;span&gt;&lt;span&gt;remote: Enumerating objects: 18446, done.
&lt;&#x2F;span&gt;&lt;span&gt;remote: Counting objects: 100% (18434&#x2F;18434), done.
&lt;&#x2F;span&gt;&lt;span&gt;remote: Compressing objects: 100% (7073&#x2F;7073), done.
&lt;&#x2F;span&gt;&lt;span&gt;remote: Total 18446 (delta 11079), reused 17946 (delta 10903), pack-reused 12
&lt;&#x2F;span&gt;&lt;span&gt;接收对象中: 100% (18446&#x2F;18446), 6.91 MiB | 5.75 MiB&#x2F;s, 完成.
&lt;&#x2F;span&gt;&lt;span&gt;处理 delta 中: 100% (11079&#x2F;11079), 完成.
&lt;&#x2F;span&gt;&lt;span&gt;来自 https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo
&lt;&#x2F;span&gt;&lt;span&gt; * [新引用]            HEAD       -&amp;gt; origin&#x2F;HEAD
&lt;&#x2F;span&gt;&lt;span&gt; * [新标签]            nightly-02cdf334798e98651f3cd059b35bf069244136b4 -&amp;gt; nightly-02cdf334798e98651f3cd059b35bf069244136b4
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;......
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   Compiling katana-rpc-types-builder v0.5.1-alpha.0 (&#x2F;Users&#x2F;qiaopengjun&#x2F;.cargo&#x2F;git&#x2F;checkouts&#x2F;dojo-10cac2e09298cf35&#x2F;cd410f9&#x2F;crates&#x2F;katana&#x2F;rpc&#x2F;rpc-types-builder)
&lt;&#x2F;span&gt;&lt;span&gt;warning: `katana-primitives` (lib) generated 3 warnings (run `cargo fix --lib -p katana-primitives` to apply 3 suggestions)
&lt;&#x2F;span&gt;&lt;span&gt;   Compiling katana-rpc v0.5.1-alpha.0 (&#x2F;Users&#x2F;qiaopengjun&#x2F;.cargo&#x2F;git&#x2F;checkouts&#x2F;dojo-10cac2e09298cf35&#x2F;cd410f9&#x2F;crates&#x2F;katana&#x2F;rpc)
&lt;&#x2F;span&gt;&lt;span&gt;   Compiling katana v0.5.1-alpha.0 (&#x2F;Users&#x2F;qiaopengjun&#x2F;.cargo&#x2F;git&#x2F;checkouts&#x2F;dojo-10cac2e09298cf35&#x2F;cd410f9&#x2F;crates&#x2F;katana)
&lt;&#x2F;span&gt;&lt;span&gt;    Finished release [optimized] target(s) in 6m 40s
&lt;&#x2F;span&gt;&lt;span&gt;  Installing &#x2F;Users&#x2F;qiaopengjun&#x2F;.cargo&#x2F;bin&#x2F;katana
&lt;&#x2F;span&gt;&lt;span&gt;   Installed package `katana v0.5.1-alpha.0 (https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo#cd410f99)` (executable `katana`)
&lt;&#x2F;span&gt;&lt;span&gt;     Summary Successfully installed sozo, katana! Failed to install torii (see error(s) above).
&lt;&#x2F;span&gt;&lt;span&gt;error: some crates failed to install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;di-er-bu&quot;&gt;第二步&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;dojoup
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;═════════════════════════════════════════════════════════════════════════
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;                  ██████╗  ██████╗      ██╗ ██████╗
&lt;&#x2F;span&gt;&lt;span&gt;                  ██╔══██╗██╔═══██╗     ██║██╔═══██╗
&lt;&#x2F;span&gt;&lt;span&gt;                  ██║  ██║██║   ██║     ██║██║   ██║
&lt;&#x2F;span&gt;&lt;span&gt;                  ██║  ██║██║   ██║██   ██║██║   ██║
&lt;&#x2F;span&gt;&lt;span&gt;                  ██████╔╝╚██████╔╝╚█████╔╝╚██████╔╝
&lt;&#x2F;span&gt;&lt;span&gt;                  ╚═════╝  ╚═════╝  ╚════╝  ╚═════╝
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;              Repo : https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo
&lt;&#x2F;span&gt;&lt;span&gt;              Book : https:&#x2F;&#x2F;book.dojoengine.org&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;              Chat : https:&#x2F;&#x2F;discord.gg&#x2F;dojoengine
&lt;&#x2F;span&gt;&lt;span&gt;                     https:&#x2F;&#x2F;t.me&#x2F;dojoengine
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;═════════════════════════════════════════════════════════════════════════
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installing dojo (version v0.5.0, tag v0.5.0)
&lt;&#x2F;span&gt;&lt;span&gt;https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo&#x2F;releases&#x2F;download&#x2F;v0.5.0&#x2F;dojo_v0.5.0_darwin_arm64.tar.gz
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: downloading latest dojo
&lt;&#x2F;span&gt;&lt;span&gt;########################################################################################################################################################## 100.0%
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installed - katana 0.5.0
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: warning:
&lt;&#x2F;span&gt;&lt;span&gt;There are multiple binaries with the name &amp;#39;katana&amp;#39; present in your &amp;#39;PATH&amp;#39;.
&lt;&#x2F;span&gt;&lt;span&gt;This may be the result of installing &amp;#39;katana&amp;#39; using another method,
&lt;&#x2F;span&gt;&lt;span&gt;like Cargo or other package managers.
&lt;&#x2F;span&gt;&lt;span&gt;You may need to run &amp;#39;rm &#x2F;Users&#x2F;qiaopengjun&#x2F;.cargo&#x2F;bin&#x2F;katana&amp;#39; or move &amp;#39;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;in your &amp;#39;PATH&amp;#39; to allow the newly installed version to take precedence!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installed - sozo 0.5.0
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: warning:
&lt;&#x2F;span&gt;&lt;span&gt;There are multiple binaries with the name &amp;#39;sozo&amp;#39; present in your &amp;#39;PATH&amp;#39;.
&lt;&#x2F;span&gt;&lt;span&gt;This may be the result of installing &amp;#39;sozo&amp;#39; using another method,
&lt;&#x2F;span&gt;&lt;span&gt;like Cargo or other package managers.
&lt;&#x2F;span&gt;&lt;span&gt;You may need to run &amp;#39;rm &#x2F;Users&#x2F;qiaopengjun&#x2F;.cargo&#x2F;bin&#x2F;sozo&amp;#39; or move &amp;#39;&#x2F;Users&#x2F;qiaopengjun&#x2F;.dojo&#x2F;bin&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;in your &amp;#39;PATH&amp;#39; to allow the newly installed version to take precedence!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installed - torii 0.5.0
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: installed - dojo-language-server 0.5.0
&lt;&#x2F;span&gt;&lt;span&gt;dojoup: done!
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;成功解决！&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;sozo init
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; ⛩️ ====== STARTING ====== ⛩️
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Setting up project directory tree...
&lt;&#x2F;span&gt;&lt;span&gt;Cloning project template from https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo-starter...
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;🎉 Successfully created a new ⛩️ Dojo project!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;====== SETUP COMPLETE! ======
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;To start using your new project, try running: `sozo build`
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;geng-duo-xiang-qing-qing-cha-kan&quot;&gt;更多详情请查看&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo&#x2F;issues&#x2F;1449&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo&#x2F;issues&#x2F;1449&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;book.dojoengine.org&#x2F;getting-started&#x2F;from-source.html&quot;&gt;https:&#x2F;&#x2F;book.dojoengine.org&#x2F;getting-started&#x2F;from-source.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;dojoengine&#x2F;dojo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;book.starknet.io&#x2F;title-page.html&quot;&gt;https:&#x2F;&#x2F;book.starknet.io&#x2F;title-page.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;book.cairo-lang.org&#x2F;title-page.html&quot;&gt;https:&#x2F;&#x2F;book.cairo-lang.org&#x2F;title-page.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>计算机网络原理之计算机网络概述</title>
        <published>2023-12-09T18:29:45+08:00</published>
        <updated>2023-12-09T18:29:45+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/computer-network-code/"/>
        <id>https://qiaopengjun5162.github.io/computer-network-code/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/computer-network-code/">&lt;h1 id=&quot;ji-suan-ji-wang-luo-yuan-li-zhi-ji-suan-ji-wang-luo-gai-shu&quot;&gt;计算机网络原理之计算机网络概述&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;yi-ji-suan-ji-wang-luo-ji-ben-gai-nian&quot;&gt;一、计算机网络基本概念&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ji-suan-ji-wang-luo-de-ding-yi&quot;&gt;计算机网络的定义&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;计算机网络（Computer Network）是若干结点（Host）通过通信设备连接起来的计算机系统，这些计算机通过通信设备进行信息交换。&lt;&#x2F;li&gt;
&lt;li&gt;从技术范畴来看，计算机网络是计算机技术与通信技术相互融合的产物。&lt;&#x2F;li&gt;
&lt;li&gt;计算机网络是互连的、自治的计算机的集合，这些计算机通过通信设备进行信息交换。&lt;&#x2F;li&gt;
&lt;li&gt;ISP 网络由许多有线或无线通信链路互连分组交换设置构成。&lt;&#x2F;li&gt;
&lt;li&gt;分组交换设备可以实现数据分组的接收与转发，是构成 Internet 的重要基础，存在多种形式，最典型的是路由器和交换机。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;xie-yi-de-ding-yi&quot;&gt;协议的定义&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;协议（Protocol）是计算机网络中，计算机之间通信必须遵守的规则，这些规则将数据划分为具有特定含义的组件，并通过这些组件在计算机之间传递数据。&lt;&#x2F;li&gt;
&lt;li&gt;协议是计算机网络中，计算机之间进行通信时所必须遵守的规则的集合。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;xie-yi-san-yao-su&quot;&gt;协议三要素&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;语法：语法是用来规定语言的规则，计算机网络协议的语法就是对数据包中数据的组织格式进行定义。&lt;&#x2F;li&gt;
&lt;li&gt;语义：语义是用来规定语言的含意，计算机网络协议的语义是对数据包中数据的含意进行定义。&lt;&#x2F;li&gt;
&lt;li&gt;同步：同步就是对发送和接收双方的数据发送和接收速率进行协调。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ji-suan-ji-wang-luo-de-gong-neng&quot;&gt;计算机网络的功能&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;硬件资源共享&lt;&#x2F;li&gt;
&lt;li&gt;软件资源共享&lt;&#x2F;li&gt;
&lt;li&gt;信息资源共享&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ji-suan-ji-wang-luo-de-fen-lei&quot;&gt;计算机网络的分类&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;an-fu-gai-fan-wei-fen-lei&quot;&gt;按覆盖范围分类&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;广域网 WAN（Wide Area Network）：覆盖范围很广的计算机网络，通常跨接很大的地理距离，所覆盖的范围从几十公里到几千公里，甚至全球。&lt;&#x2F;li&gt;
&lt;li&gt;城域网 MAN（Metropolitan Area Network）：覆盖范围较小的计算机网络，通常覆盖一个城市，也可以覆盖一个城市里的几个区&lt;&#x2F;li&gt;
&lt;li&gt;局域网 LAN（Local Area Network）：覆盖范围较小的计算机网络，通常覆盖一个校园，一个公司，或者一个单位。&lt;&#x2F;li&gt;
&lt;li&gt;个人区域网 PAN（Personal Area Network）：覆盖范围极小的计算机网络，通常覆盖一个家庭，一个宿舍或一个办公室。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;an-tuo-bu-jie-gou-fen-lei&quot;&gt;按拓扑结构分类&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;总线型拓扑结构&lt;&#x2F;li&gt;
&lt;li&gt;环型拓扑结构&lt;&#x2F;li&gt;
&lt;li&gt;星型拓扑结构&lt;&#x2F;li&gt;
&lt;li&gt;网状拓扑结构&lt;&#x2F;li&gt;
&lt;li&gt;树形拓扑结构&lt;&#x2F;li&gt;
&lt;li&gt;混合拓扑结构&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;an-jiao-huan-fang-shi-fen-lei&quot;&gt;按交换方式分类&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;电路交换（Circuit Switching）：在通信开始前，通信双方需要先建立一个通信电路，然后通信双方通过这个电路进行通信。通信的结束也通过释放这个通信电路来结束。&lt;&#x2F;li&gt;
&lt;li&gt;报文交换（Message Switching）：报文交换的交换节点即交换机，交换机中存储着大量报文，报文交换机根据报文中的地址信息将报文转发到下一个交换机。报文交换的交换节点即交换机，交换机中存储着大量报文，报文交换机根据报文中的地址信息将报文转发到下一个交换机。&lt;&#x2F;li&gt;
&lt;li&gt;分组交换（Packet Switching）：分组交换的交换节点即交换机，交换机中存储着大量分组，分组交换机根据分组中的地址信息将分组转发到下一个交换机。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;an-chuan-shu-jie-zhi-fen-lei&quot;&gt;按传输介质分类&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;无线传输介质&lt;&#x2F;li&gt;
&lt;li&gt;有线传输介质&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;an-wang-luo-mo-xing-fen-lei&quot;&gt;按网络模型分类&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;OSI 七层模型&lt;&#x2F;li&gt;
&lt;li&gt;TCP&#x2F;IP 四层模型&lt;&#x2F;li&gt;
&lt;li&gt;客户-服务器模型&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;an-wang-luo-yong-hu-shu-xing-fen-lei&quot;&gt;按网络用户属性分类&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;公用网&lt;&#x2F;li&gt;
&lt;li&gt;私有网&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;er-ji-suan-ji-wang-luo-jie-gou&quot;&gt;二、计算机网络结构&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;wang-luo-bian-yuan&quot;&gt;网络边缘&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;终端系统（End System）：终端系统也称为用户终端（User Equipment），直接连到网络的计算机，是网络边缘设备，是计算机用户访问网络的入口。&lt;&#x2F;li&gt;
&lt;li&gt;边缘路由器（Edge Router）：边缘路由器也称为网络接入设备（Network Access Device），是网络边缘设备，是终端系统接入互联网的网关，是网络边缘的入口。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jie-ru-wang-luo&quot;&gt;接入网络&lt;&#x2F;h3&gt;
&lt;p&gt;常见的接入网络包括以下几类：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;电话拨号接入&lt;&#x2F;li&gt;
&lt;li&gt;非对称数字用户线路 ADSL&lt;&#x2F;li&gt;
&lt;li&gt;混合光纤同轴电缆 HFC 接入网络&lt;&#x2F;li&gt;
&lt;li&gt;局域网&lt;&#x2F;li&gt;
&lt;li&gt;移动接入网络&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wang-luo-he-xin&quot;&gt;网络核心&lt;&#x2F;h3&gt;
&lt;h2 id=&quot;san-shu-ju-jiao-huan-ji-shu&quot;&gt;三、数据交换技术&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;shu-ju-jiao-huan-de-gai-nian&quot;&gt;数据交换的概念&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;dian-lu-jiao-huan&quot;&gt;电路交换&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;建立电路&lt;&#x2F;li&gt;
&lt;li&gt;传输数据&lt;&#x2F;li&gt;
&lt;li&gt;拆除电路&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;bao-wen-jiao-huan&quot;&gt;报文交换&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;报文交换机&lt;&#x2F;li&gt;
&lt;li&gt;报文&lt;&#x2F;li&gt;
&lt;li&gt;存储转发&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;fen-zu-jiao-huan&quot;&gt;分组交换&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;fen-zu-jiao-huan-de-ji-ben-yuan-li&quot;&gt;分组交换的基本原理&lt;&#x2F;h4&gt;
&lt;h4 id=&quot;fen-zu-jiao-huan-de-you-dian&quot;&gt;分组交换的优点&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;交换设备存储容量要求低&lt;&#x2F;li&gt;
&lt;li&gt;交换速度快&lt;&#x2F;li&gt;
&lt;li&gt;可靠传输效率高&lt;&#x2F;li&gt;
&lt;li&gt;更加公平&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;fen-zu-chang-du-de-que-ding&quot;&gt;分组长度的确定&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;分组长度与延迟时间&lt;&#x2F;li&gt;
&lt;li&gt;分组长度与误码率&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;si-ji-suan-ji-wang-luo-xing-neng&quot;&gt;四、计算机网络性能&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;su-lu-yu-dai-kuan&quot;&gt;速率与带宽&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;shi-yan&quot;&gt;时延&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;结点处理时延&lt;&#x2F;li&gt;
&lt;li&gt;排队时延&lt;&#x2F;li&gt;
&lt;li&gt;传输时延&lt;&#x2F;li&gt;
&lt;li&gt;传播时延&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shi-yan-dai-kuan-ji&quot;&gt;时延带宽积&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;diu-bao-lu&quot;&gt;丢包率&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;tun-tu-liang&quot;&gt;吞吐量&lt;&#x2F;h3&gt;
&lt;h2 id=&quot;wu-ji-suan-ji-wang-luo-ti-xi-jie-gou&quot;&gt;五、计算机网络体系结构&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ji-suan-ji-wang-luo-fen-ceng-ti-xi-jie-gou&quot;&gt;计算机网络分层体系结构&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;osi-can-kao-mo-xing&quot;&gt;OSI 参考模型&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;tcp-ip-can-kao-mo-xing&quot;&gt;TCP&#x2F;IP 参考模型&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;wu-ceng-can-kao-mo-xing&quot;&gt;五层参考模型&lt;&#x2F;h3&gt;
&lt;h2 id=&quot;ji-suan-ji-wang-luo-yu-yin-te-wang-fa-zhan-jian-shi&quot;&gt;计算机网络与因特网发展简史&lt;&#x2F;h2&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Python 中 import 的使用说明</title>
        <published>2023-12-09T18:16:48+08:00</published>
        <updated>2023-12-09T18:16:48+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/code-import/"/>
        <id>https://qiaopengjun5162.github.io/code-import/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/code-import/">&lt;h1 id=&quot;python-zhong-import-de-shi-yong-shuo-ming&quot;&gt;Python 中 import 的使用说明&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;1-dao-ru-mo-kuai&quot;&gt;1. 导入模块&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-1-dao-ru-mo-kuai&quot;&gt;1.1 导入模块&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;module1, module2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;1-2-dao-ru-mo-kuai-shi-gei-mo-kuai-zhi-ding-bie-ming&quot;&gt;1.2 导入模块时给模块指定别名&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;module1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;m1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;module2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;m2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;1-3-dao-ru-mo-kuai-shi-gei-mo-kuai-zhi-ding-bie-ming-bing-zhi-ding-mo-kuai-de-lu-jing&quot;&gt;1.3 导入模块时给模块指定别名，并指定模块的路径&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;module1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;m1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;module2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;m2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;module1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;func1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;module2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;func2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;2-importde-ge-shi-shuo-ming&quot;&gt;2. import的格式说明&lt;&#x2F;h2&gt;
&lt;p&gt;Python官方给出的建议是这样的，把import分为三个类型：&lt;&#x2F;p&gt;
&lt;p&gt;官方标准库，比如sys, os
第三方库，比如numpy
本地库&lt;&#x2F;p&gt;
&lt;p&gt;每一组import都要用空格区分开。&lt;&#x2F;p&gt;
&lt;p&gt;在每一组import内，每个import只import一个库，不要出现 import os, sys 这样的用法。如果用from，可以import多个内容，比如 from subprocess import Popen, PIPE 。尽量避免使用 from XX import * ，以防命名冲突。&lt;&#x2F;p&gt;
&lt;p&gt;在每一组import内，先写import完整库的，再写使用from的。每一类再按照字典序排序。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;3-dao-ru-mo-kuai-de-shun-xu&quot;&gt;3. 导入模块的顺序&lt;&#x2F;h2&gt;
&lt;p&gt;Python的import语句是可以在程序中多次使用的，所以，如果导入的模块过多，那么导入顺序就显得尤为重要。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-1-dao-ru-shun-xu&quot;&gt;3.1 导入顺序&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;标准库&lt;&#x2F;li&gt;
&lt;li&gt;第三方库&lt;&#x2F;li&gt;
&lt;li&gt;本地库&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;3-2-dao-ru-shun-xu-shi-li&quot;&gt;3.2 导入顺序示例&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;os
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;sys
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;time
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;datetime
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;numpy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;np
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;pandas &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;pd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;matplotlib.pyplot &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;plt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;seaborn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;sns
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;xlrd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;xlwt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;xlsxwriter
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;openpyxl
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>如果我们要打印一个class的signature（比如使用help命令的时候），我们是应该优先__new__，还是__init__？</title>
        <published>2023-12-09T18:08:19+08:00</published>
        <updated>2023-12-09T18:08:19+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/code-init-new/"/>
        <id>https://qiaopengjun5162.github.io/code-init-new/</id>
        
        <summary type="html">&lt;h1 id=&quot;ru-guo-wo-men-yao-da-yin-yi-ge-classde-signature-bi-ru-shi-yong-helpming-ling-de-shi-hou-wo-men-shi-ying-gai-you-xian-new-huan-shi-init&quot;&gt;如果我们要打印一个class的signature（比如使用help命令的时候），我们是应该优先__new__，还是__init__？&lt;&#x2F;h1&gt;
&lt;p&gt;如果这个class同时自定义了__new__和__init__，按照现在的实现，是先打印__new__的。&lt;&#x2F;p&gt;
&lt;p&gt;任何一个类，如果同时定义了__new__和__init__，只有__new__在instantiate的时候是一定会被运行的，因为__new__可以返回一个其他类型（衍生类甚至是完全无关的类型）的object，导致这个类的__init__压根没有被调用。也就是说，__new__是比__init__更稳定的signature。&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Python中自带的 assert 的使用</title>
        <published>2023-12-09T17:57:50+08:00</published>
        <updated>2023-12-09T17:57:50+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/code-assert/"/>
        <id>https://qiaopengjun5162.github.io/code-assert/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/code-assert/">&lt;h1 id=&quot;pythonzhong-zi-dai-de-assert-de-shi-yong&quot;&gt;Python中自带的 assert 的使用&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;1-gai-shu&quot;&gt;1. 概述&lt;&#x2F;h2&gt;
&lt;p&gt;assert 语句用于判断一个表达式，在表达式条件为 false 的时候触发异常。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;2-yu-fa&quot;&gt;2. 语法&lt;&#x2F;h2&gt;
&lt;p&gt;assert expression [, arguments]&lt;&#x2F;p&gt;
&lt;h2 id=&quot;3-shi-li&quot;&gt;3. 实例&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# 判断一个变量是否为空
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;is not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;4-zhu-yi-shi-xiang&quot;&gt;4. 注意事项&lt;&#x2F;h2&gt;
&lt;p&gt;assert 语句只在调试模式开启时起作用，在发布模式时，assert 语句将被忽略。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;5-duan-yan-de-yong-fa&quot;&gt;5. 断言的用法&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;5-1-duan-yan-biao-da-shi-wei-zhen&quot;&gt;5.1 断言表达式为真&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-2-duan-yan-biao-da-shi-wei-jia&quot;&gt;5.2 断言表达式为假&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-3-duan-yan-biao-da-shi-wei-jia-bing-pao-chu-yi-chang&quot;&gt;5.3 断言表达式为假，并抛出异常&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;1 is not equal to 2&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-4-duan-yan-biao-da-shi-wei-jia-bing-pao-chu-yi-chang-bing-fu-jia-e-wai-de-can-shu&quot;&gt;5.4 断言表达式为假，并抛出异常，并附加额外的参数&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;1 is not equal to 2&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;100
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-5-duan-yan-biao-da-shi-wei-jia-bing-pao-chu-yi-chang-bing-fu-jia-e-wai-de-can-shu-bing-fu-jia-e-wai-de-can-shu&quot;&gt;5.5 断言表达式为假，并抛出异常，并附加额外的参数，并附加额外的参数&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;assert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;1 is not equal to 2&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;200
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;6-duan-yan-de-zhi-xing&quot;&gt;6. 断言的执行&lt;&#x2F;h2&gt;
&lt;p&gt;assert 语句只在调试模式开启时起作用，在发布模式时，assert 语句将被忽略。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;7-duan-yan-de-zhi-xing-guo-cheng&quot;&gt;7. 断言的执行过程&lt;&#x2F;h2&gt;
&lt;p&gt;断言的执行过程如下：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;执行 assert 语句&lt;&#x2F;li&gt;
&lt;li&gt;如果断言失败，则触发 AssertionError 异常&lt;&#x2F;li&gt;
&lt;li&gt;异常被触发时，assert 语句后面的语句将不会执行&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;8-duan-yan-de-shi-yong-shuo-ming&quot;&gt;8. 断言的使用说明&lt;&#x2F;h2&gt;
&lt;p&gt;首先，在python中，assert expression 在不开-O（即使用debug mode）的情况下，等价于if not expression: raise AssertionError 。python里的assert就是raise了一个exception而已。但是我们看待assert的时候，要从语言的层面去理解，背后的实现反而没那么重要。&lt;&#x2F;p&gt;
&lt;p&gt;assert的语义其实是非常清晰的——这个事情它压根不该发生。你永远不应该用assert处理任何错误，如果你能想到一个当前情况下assert不成立的可能性，你这里就不应该写这个assert。你不应该依赖assert的任何behavior，任何assert不成立的时候，你就应该接受你的程序可能发生任何事情。事实上，在使用-O（production mode）的时候，所有的assert都会被变成noop，也就是没有任何行为。&lt;&#x2F;p&gt;
&lt;p&gt;那为什么要写assert？当然还是有原因的。&lt;&#x2F;p&gt;
&lt;p&gt;第一，当你在对程序进行开发的时候，可以更快地发现一些程序的错误。比如你这个函数是个内部函数，只有自己的代码调用，你觉得传进来的都应该是int，你不需要对传入数据进行类型判断，这里可以加一个assert isinstance(arg, int) ，万一你在开发的时候出了一些比较蠢的错误，可以及时发现。这个用法其实大家相对熟悉一些，有的人在开发的时候会用这个方式调试。&lt;&#x2F;p&gt;
&lt;p&gt;第二，是一个被很多人忽略的点——assert是有注释含义的。它可以提醒后来的开发者（和一周后的你自己），这个地方我确认某个事情是成立的，你不需要去思考其他的可能性。这样的assert在开发时起到一个测试的作用，而在开发后维护的时候起到一个注释的作用。在assert起注释作用的时候，它的可信度是更高的。我相信大家都会有读代码的时候看到一段注释，不知道该不该信的时候（可能时间久远了）。但是如果是assert，说服力明显就更强。&lt;&#x2F;p&gt;
&lt;p&gt;最后再次强调一下，不要把assert当成一个正常的exception来用！不要去catch AssertionError！尽管在Python实现的层面上它就是一个exception，但是大家一定要习惯把语义和实现区分开这个事情，因为你写的代码在被别人阅读的时候是有隐含意的。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>开发中 PR 注意事项</title>
        <published>2023-12-09T17:52:06+08:00</published>
        <updated>2023-12-09T17:52:06+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/code-pr/"/>
        <id>https://qiaopengjun5162.github.io/code-pr/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/code-pr/">&lt;h1 id=&quot;kai-fa-zhong-pr-zhu-yi-shi-xiang&quot;&gt;开发中 PR 注意事项&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;ti-jiao-pr&quot;&gt;提交PR&lt;&#x2F;h2&gt;
&lt;p&gt;在提交PR的时候，需要先在本地创建一个分支，然后在这个分支上开发，开发完成后，再将这个分支合并到主分支&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dai-ma-gui-fan&quot;&gt;代码规范&lt;&#x2F;h2&gt;
&lt;p&gt;大家提交PR的时候，要注意一下代码规范，不要提交一些不符合规范的代码，比如空格、换行。
在拉PR的时候要注意一下，不要去轻易地动和你的PR无关的代码，什么随手改一个空格或者括号的位置啥的，这是非常不可取的。把自己的代码保持和源代码的style一致，只去专心做feature，额外的空行都不要多加。养成好习惯！&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>测试的几个基本原则</title>
        <published>2023-12-09T17:43:50+08:00</published>
        <updated>2023-12-09T17:43:50+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/code-test/"/>
        <id>https://qiaopengjun5162.github.io/code-test/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/code-test/">&lt;h1 id=&quot;xie-ce-shi-de-yi-xie-ji-ben-yuan-ze&quot;&gt;写测试的一些基本原则&lt;&#x2F;h1&gt;
&lt;p&gt;测试的核心只有一个——确认你的代码运行结果和期待结果是一致的。&lt;&#x2F;p&gt;
&lt;p&gt;因此，当你写测试的时候，你脑子里只需要考虑两个事情&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;我如何得到这段代码的运行结果&lt;&#x2F;li&gt;
&lt;li&gt;我这段代码的期待结果是什么？
根据得到运行结果方式的不同，我们有很多的测试分类，比如黑盒或者白盒。不需要去对这些分类死记硬背，你脑海中其实只需要想我怎么拿到结果。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;比如在Python中，你可以通过直接调用你写的函数求值。如果用这种方法，你就会发现，你写的代码好坏，很大程度上影响了你测试的难易。side effect越小的代码，越好测试。比如一个函数，它一个输入永远对应一个输出，这代码就非常好测试。这个函数是个method，它依赖instance的一些属性，就难测一些，需要建立一个instance。它依赖一些全局变量，更难测了。依赖远端的数据库之类的，那就难测炸了。一段代码，依赖的东西越多越复杂，测试就越困难。所以很多人会发现，只有自己开始写测试了，才能意识到自己的代码写的有什么毛病。&lt;&#x2F;p&gt;
&lt;p&gt;除了直接调用，也可以通过subprocess去开一个新的进程。有时候这是必须的，比如viztracer这种命令行工具，你是不能通过完全的直接调用去做测试的。那这里你就需要对怎么开一个新进程做一个了解，或许还需要自己整理一个小小的framework来测试你的工具。&lt;&#x2F;p&gt;
&lt;p&gt;得到了实际运行结果之后，就要和期待结果进行比对。你的程序一定得有个期待结果才能去测试，不然你光跑一下程序是几乎没有意义的（倒是能确认不报错）。&lt;&#x2F;p&gt;
&lt;p&gt;在设计期待结果的时候，要注意一下这个结果是不是稳定的。比如我去读我的stdout打印某一串字符串——那它未来的输出是不是可能变？我在写pdb的代码的时候，经常会涉及测试中显示代码在文件中行数的问题，这就是一个很重要的考量。你把测试写死了，后面就总得调整，改一下代码就得改测试，你的测试就失去了价值。&lt;&#x2F;p&gt;
&lt;p&gt;既然聊到了测试的价值，我们就说一下——为什么要写测试？
测试当然是确认此时此刻，你的程序是正常工作的。但是它更大的意义在于——增强了未来你对程序做修改的时候你对程序还工作的信心。&lt;&#x2F;p&gt;
&lt;p&gt;在你刚开始开发某个功能的时候，可能手动做了非常多的测试，一步一步地把它弄得正常工作。这时候你可能觉得我为什么要写那些我已经做过的测试？浪费时间啊。但这些自动化测试的意义在于，在未来你改动代码的时候，随时保证你之前的那些功能还正常工作。因为你不会在未来修改代码的时候再这么详细地测试你之前开发的功能了。&lt;&#x2F;p&gt;
&lt;p&gt;如果你的代码缺少测试，你会很快陷入一个开发瓶颈——完全不敢重构和做大型的修改，只敢做新功能。因为根本不知道改之后我这东西还工作不工作。随着你项目复杂度的增加，各个模块之间耦合度变大，任何一个部分的修改都可能影响到很多内容，你就没法接着写了，然后项目就烂尾了。&lt;&#x2F;p&gt;
&lt;p&gt;所以，如果你想做一个相对长期稳定维护的项目，测试是不可少的。具体的测试上的技术细节，其实并没有那么重要。就像我前面说的，无非就是想办法运行你的代码，再和期待值做比较。测试的代码经常没那么“漂亮”，甚至有不少冗余，这都完全是可被接受的。甚至很多时候，要适度减少测试代码中的抽象，以保证每个单独的测试的完整性（读测试代码的时候不用几个函数之间来回切）。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>量化学习之 jupyter notebook 环境配置</title>
        <published>2023-12-09T11:05:59+08:00</published>
        <updated>2023-12-09T11:05:59+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/jupyter-notebook/"/>
        <id>https://qiaopengjun5162.github.io/jupyter-notebook/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/jupyter-notebook/">&lt;h1 id=&quot;liang-hua-xue-xi-zhi-jupyter-notebook-huan-jing-pei-zhi&quot;&gt;量化学习之 jupyter notebook 环境配置&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;# 安装 anaconda
&lt;&#x2F;span&gt;&lt;span&gt;conda create -n jupyter python=3.8
&lt;&#x2F;span&gt;&lt;span&gt;conda activate jupyter
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# 安装 jupyter notebook
&lt;&#x2F;span&gt;&lt;span&gt;pip install jupyter
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# 安装 jupyter lab
&lt;&#x2F;span&gt;&lt;span&gt;pip install jupyterlab
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# 安装 jupyter lab extensions
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;toc
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;git
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyter-widgets&#x2F;jupyterlab-manager
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;plotly-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;celltags
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;toc
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;launcher
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;shortcuts
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;debugger
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;running
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;vega5-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;hub-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;vdom
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;theme-dark-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;theme-light-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;virtual-gl
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;fasta-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;geojson-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;mathjax3-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;vega5-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;toc
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;celltags
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;plotly-extension
&lt;&#x2F;span&gt;&lt;span&gt;jupyter labextension install @jupyterlab&#x2F;celltags
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# 安装 jupyter notebook
&lt;&#x2F;span&gt;&lt;span&gt;conda install jupyter notebook
&lt;&#x2F;span&gt;&lt;span&gt;# 创建虚拟环境
&lt;&#x2F;span&gt;&lt;span&gt;conda create -n quantify_python_3_12 python=3.12
&lt;&#x2F;span&gt;&lt;span&gt;# 激活虚拟环境
&lt;&#x2F;span&gt;&lt;span&gt;conda activate quantify_python_3_12
&lt;&#x2F;span&gt;&lt;span&gt;# 查看虚拟环境列表
&lt;&#x2F;span&gt;&lt;span&gt;conda env list
&lt;&#x2F;span&gt;&lt;span&gt;# 安装AKShare
&lt;&#x2F;span&gt;&lt;span&gt;pip install akshare  --upgrade
&lt;&#x2F;span&gt;&lt;span&gt;# 安装 Tushare
&lt;&#x2F;span&gt;&lt;span&gt;pip install tushare
&lt;&#x2F;span&gt;&lt;span&gt;# 安装Empyrical （安装失败）
&lt;&#x2F;span&gt;&lt;span&gt;pip install empyrical -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple
&lt;&#x2F;span&gt;&lt;span&gt;# 安装 QuantStats
&lt;&#x2F;span&gt;&lt;span&gt;pip install quantstats --upgrade --no-cache-dir
&lt;&#x2F;span&gt;&lt;span&gt;# 安装 prompt_toolkit
&lt;&#x2F;span&gt;&lt;span&gt;pip install prompt_toolkit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# 确认是否安装 ipykernel
&lt;&#x2F;span&gt;&lt;span&gt;python -m ipykernel --version
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# 安装 ipykernel
&lt;&#x2F;span&gt;&lt;span&gt;pip install ipykernel
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# 添加内核到jupyter
&lt;&#x2F;span&gt;&lt;span&gt;python -m ipykernel install --user --name=quantify_python_3_12 --display-name quantify_python_3_12
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# 查看内核
&lt;&#x2F;span&gt;&lt;span&gt;jupyter kernelspec list
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# 启动jupyter
&lt;&#x2F;span&gt;&lt;span&gt;jupyter notebook
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>零知识证明 PLONK</title>
        <published>2023-10-17T01:07:08+08:00</published>
        <updated>2023-10-17T01:07:08+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/plonk/"/>
        <id>https://qiaopengjun5162.github.io/plonk/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/plonk/">&lt;h1 id=&quot;ling-zhi-shi-zheng-ming-plonk&quot;&gt;零知识证明 PLONK&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;eprint.iacr.org&#x2F;2019&#x2F;953.pdf&quot;&gt;https:&#x2F;&#x2F;eprint.iacr.org&#x2F;2019&#x2F;953.pdf&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;plonk-bei-jing&quot;&gt;PLONK 背景&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;fft-fast-fourier-transform&quot;&gt;FFT(Fast Fourier transform)&lt;&#x2F;h3&gt;
&lt;p&gt;将一个用&lt;strong&gt;系数&lt;&#x2F;strong&gt;表示的多项式转换成它的&lt;strong&gt;点值&lt;&#x2F;strong&gt;表示的算法，O(n log n)&lt;&#x2F;p&gt;
&lt;p&gt;作用在&lt;strong&gt;有限域&lt;&#x2F;strong&gt;上，多项式相乘（也叫求卷积）&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ifft-inverse-fast-fourier-transform&quot;&gt;IFFT(Inverse Fast Fourier transform)&lt;&#x2F;h3&gt;
&lt;p&gt;将一个用&lt;strong&gt;点值&lt;&#x2F;strong&gt;表示的多项式转换成它的&lt;strong&gt;系数&lt;&#x2F;strong&gt;表示的算法&lt;&#x2F;p&gt;
&lt;p&gt;n 次单位元的性质&lt;&#x2F;p&gt;
&lt;h3 id=&quot;polynomial-cheng-nuo-kate&quot;&gt;Polynomial 承诺(Kate)&lt;&#x2F;h3&gt;
&lt;p&gt;结论：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;任意程序可转化为电路（Circuit）&lt;&#x2F;li&gt;
&lt;li&gt;电路可转化成多项式表示&lt;&#x2F;li&gt;
&lt;li&gt;多项式可承诺并证明&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;P 向 V 证明拥有多项式（or 函数） f(x)：&lt;&#x2F;p&gt;
&lt;p&gt;f(s) = z =&amp;gt; f(s) -z = 0 =&amp;gt; f’(x) = f(x) - z root x = s  =&amp;gt; f’(x) = (x-s)*h(x)&lt;&#x2F;p&gt;
&lt;p&gt;z 可作为多项式承诺（Schwartz-zippel lemma d &amp;lt;&amp;lt; P）&lt;&#x2F;p&gt;
&lt;h3 id=&quot;plonk-circuit&quot;&gt;PLONK-Circuit&lt;&#x2F;h3&gt;
&lt;p&gt;加法门  乘法门 布尔门&lt;&#x2F;p&gt;
&lt;p&gt;检查满足电路的关系&lt;&#x2F;p&gt;
&lt;h3 id=&quot;plonk-lagrange&quot;&gt;PLONK-Lagrange&lt;&#x2F;h3&gt;
&lt;p&gt;从几何上看，n 次插值多项式 Pn(x)，是一条n 次代数曲线，它通过曲线 y = f(x) 上的 n + 1 个点&lt;&#x2F;p&gt;
&lt;p&gt;y = f(x)&lt;&#x2F;p&gt;
&lt;p&gt;y = Pn(x)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;plonk-you-shi&quot;&gt;PLonk 优势&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;整个方案只设置一个单独的可信设置&lt;&#x2F;li&gt;
&lt;li&gt;多方可参与的可信设置&lt;&#x2F;li&gt;
&lt;li&gt;用多项式承诺代替原先的零知识验证步骤&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;plonk-prove&quot;&gt;PLONK-Prove&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;Set up SRS （Structure Reference String）&lt;&#x2F;li&gt;
&lt;li&gt;Build Circuit （Selector）&lt;&#x2F;li&gt;
&lt;li&gt;Preprocess&lt;&#x2F;li&gt;
&lt;li&gt;Build Proof&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;plonk-verify&quot;&gt;PLONK-Verify&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;Set up SRS (Structure Reference String)&lt;&#x2F;li&gt;
&lt;li&gt;Validate proof range (Selector)&lt;&#x2F;li&gt;
&lt;li&gt;Compute opening evaluation&lt;&#x2F;li&gt;
&lt;li&gt;ECC Pairing check Polymoial equation&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;更多请查看：&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ypilwXBXATM&quot;&gt;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ypilwXBXATM&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;门约束&lt;&#x2F;p&gt;
&lt;p&gt;算术化是指把计算转换成数学对象，然后进行零知识证明。 Plonkish 算术化是 Plonk 证明系统特有的算术化方法，在 Plonkish 出现之前，主流的电路表达形式为 R1CS，被 Pinocchio，Groth16，Bulletproofs 等广泛采用。&lt;&#x2F;p&gt;
&lt;p&gt;一个算术电路包含若干个乘法门与加法门。每一个门都有「两个输入」引脚和一个「输出」引脚，任何一个输出引脚可以被接驳到多个门的输入引脚上。&lt;&#x2F;p&gt;
&lt;p&gt;所有的加法门都会被展开成多个变量的相加（或线性组合）。&lt;&#x2F;p&gt;
&lt;p&gt;并不是任何一个电路都存在赋值向量。凡是存在合法的赋值向量的电路，被称为可被满足的电路。判断一个电路是否可被满足，是一个 NP-Complete 问题，也是一个 NP 困难问题。&lt;&#x2F;p&gt;
&lt;p&gt;请注意，通常「赋值向量」中需要一个固定赋值为 1 的变量，这是为了处理加法门中的常量输入。&lt;&#x2F;p&gt;
&lt;p&gt;拷贝约束，即 Copy Constraint。&lt;&#x2F;p&gt;
&lt;p&gt;置换&lt;&#x2F;p&gt;
&lt;p&gt;多项式承诺&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Rust 学习之数组和切片的大小问题</title>
        <published>2023-10-09T00:10:23+08:00</published>
        <updated>2023-10-09T00:10:23+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/array-slice-bug/"/>
        <id>https://qiaopengjun5162.github.io/array-slice-bug/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/array-slice-bug/">&lt;h1 id=&quot;rust-xue-xi-zhi-shu-zu-he-qie-pian-de-da-xiao-wen-ti&quot;&gt;Rust 学习之数组和切片的大小问题&lt;&#x2F;h1&gt;
&lt;h3 id=&quot;wen-ti&quot;&gt;问题&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;error[E0277]: the size for values of type `[{integer}]` cannot be known at compilation time
&lt;&#x2F;span&gt;&lt;span&gt;  --&amp;gt; exercises&#x2F;primitive_types&#x2F;primitive_types4.rs:14:9
&lt;&#x2F;span&gt;&lt;span&gt;   |
&lt;&#x2F;span&gt;&lt;span&gt;14 |     let nice_slice = a[1..4];
&lt;&#x2F;span&gt;&lt;span&gt;   |         ^^^^^^^^^^ doesn&amp;#39;t have a size known at compile-time
&lt;&#x2F;span&gt;&lt;span&gt;   |
&lt;&#x2F;span&gt;&lt;span&gt;   = help: the trait `Sized` is not implemented for `[{integer}]`
&lt;&#x2F;span&gt;&lt;span&gt;   = note: all local variables must have a statically known size
&lt;&#x2F;span&gt;&lt;span&gt;   = help: unsized locals are gated as an unstable feature
&lt;&#x2F;span&gt;&lt;span&gt;help: consider borrowing here
&lt;&#x2F;span&gt;&lt;span&gt;   |
&lt;&#x2F;span&gt;&lt;span&gt;14 |     let nice_slice = &amp;amp;a[1..4];
&lt;&#x2F;span&gt;&lt;span&gt;   |                      +
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;error: aborting due to previous error
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;For more information about this error, try `rustc --explain E0277`.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;jie-jue&quot;&gt;解决&lt;&#x2F;h3&gt;
&lt;p&gt;你的问题是在Rust编程语言中遇到的，它涉及到数组和切片的大小问题。在Rust中，所有的局部变量都必须有一个在编译时已知的大小。这是因为Rust需要在栈上分配这些变量，而栈上的空间大小是在编译时确定的。&lt;&#x2F;p&gt;
&lt;p&gt;在你的代码中，你试图创建一个名为 &lt;code&gt;nice_slice&lt;&#x2F;code&gt; 的变量，它是数组 &lt;code&gt;a&lt;&#x2F;code&gt; 的一个切片。然而，切片的大小是在运行时确定的，而不是在编译时。这就是为什么你收到了这个错误。&lt;&#x2F;p&gt;
&lt;p&gt;解决这个问题的一种方法是，你可以将 &lt;code&gt;nice_slice&lt;&#x2F;code&gt; 变为一个引用（&amp;amp;），如错误提示所建议的那样。这样，&lt;code&gt;nice_slice&lt;&#x2F;code&gt; 将指向切片，而不是拥有切片。由于引用的大小是固定的（在64位系统中为8字节，32位系统中为4字节），所以可以在编译时确定其大小。这是修改后的代码：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; nice_slice &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &amp;amp;&lt;&#x2F;span&gt;&lt;span&gt;a[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;];
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这样，你就能够创建一个指向你所需切片的引用，而不是尝试在栈上直接存储切片本身。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>安装rustlings报错解决</title>
        <published>2023-10-08T22:54:09+08:00</published>
        <updated>2023-10-08T22:54:09+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/githubusercontentfix/"/>
        <id>https://qiaopengjun5162.github.io/githubusercontentfix/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/githubusercontentfix/">&lt;h1 id=&quot;an-zhuang-rustlingsbao-cuo-jie-jue&quot;&gt;安装rustlings报错解决&lt;&#x2F;h1&gt;
&lt;h3 id=&quot;xiang-guan-wen-dang&quot;&gt;相关文档&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LearningOS&#x2F;rust-rustlings-2023-autumn-qiaopengjun5162&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;LearningOS&#x2F;rust-rustlings-2023-autumn-qiaopengjun5162&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;an-zhuang-rustlingsbao-cuo&quot;&gt;安装&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LearningOS&#x2F;rust-rustlings-2023-autumn-qiaopengjun5162#rustlings-%EF%B8%8F&quot;&gt;rustlings&lt;&#x2F;a&gt;报错&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;~&#x2F;Code&#x2F;rust via 🅒 base took 53.7s
&lt;&#x2F;span&gt;&lt;span&gt;➜
&lt;&#x2F;span&gt;&lt;span&gt;curl -L https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;rust-lang&#x2F;rustlings&#x2F;main&#x2F;install.sh | bash
&lt;&#x2F;span&gt;&lt;span&gt;  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
&lt;&#x2F;span&gt;&lt;span&gt;                                 Dload  Upload   Total   Spent    Left  Speed
&lt;&#x2F;span&gt;&lt;span&gt;  0     0    0     0    0     0      0      0 --:--:--  0:01:15 --:--:--     0
&lt;&#x2F;span&gt;&lt;span&gt;curl: (28) Failed to connect to raw.githubusercontent.com port 443 after 75005 ms: Couldn&amp;#39;t connect to server
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;jie-jue&quot;&gt;解决&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;访问&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;sites.ipaddress.com&#x2F;raw.githubusercontent.com&#x2F;&quot;&gt;https:&#x2F;&#x2F;sites.ipaddress.com&#x2F;raw.githubusercontent.com&#x2F;&lt;&#x2F;a&gt;网站，获取最新IP地址。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;修改hosts文件&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;sudo vim &#x2F;etc&#x2F;hosts&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;编辑 hosts 文件，新增下列内容&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;185.199.108.133 raw.githubusercontent.com&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>AWS CLI DynamoDB</title>
        <published>2023-09-01T18:09:43+08:00</published>
        <updated>2023-09-01T18:09:43+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/aws-cli-dynamodb/"/>
        <id>https://qiaopengjun5162.github.io/aws-cli-dynamodb/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/aws-cli-dynamodb/">&lt;h1 id=&quot;aws-cli-dynamodb-shi-cao&quot;&gt;AWS CLI DynamoDB 实操&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;aws-cli-an-zhuang&quot;&gt;AWS CLI 安装&lt;&#x2F;h2&gt;
&lt;h2 id=&quot;dynamodb-shi-cao&quot;&gt;DynamoDB 实操&lt;&#x2F;h2&gt;
&lt;p&gt;![image-20230829230450833](..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20230829230450833.png)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dynamodb-chuang-jian-biao&quot;&gt;dynamodb 创建表&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;dynamodb create-table --table-name contact --attribute-definitions AttributeName=name,AttributeType=S AttributeName=email,AttributeType=S --key-schema AttributeName=name,KeyType=HASH AttributeName=email,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;dynamodb-chuang-jian-xiang-mu-tian-jia-shu-ju&quot;&gt;dynamodb 创建项目 添加数据&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; dynamodb put-item --table-name contact --item &amp;#39;{&amp;quot;name&amp;quot;:{&amp;quot;S&amp;quot;:&amp;quot;xiao qiao&amp;quot;},&amp;quot;email&amp;quot;:{&amp;quot;S&amp;quot;:&amp;quot;qpj4812@gmail.com&amp;quot;}}&amp;#39; --return-consumed-capacity TOTAL
&lt;&#x2F;span&gt;&lt;span&gt;----------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|             PutItem            |
&lt;&#x2F;span&gt;&lt;span&gt;+--------------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;||       ConsumedCapacity       ||
&lt;&#x2F;span&gt;&lt;span&gt;|+----------------+-------------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  CapacityUnits |  TableName  ||
&lt;&#x2F;span&gt;&lt;span&gt;|+----------------+-------------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  1.0           |  contact    ||
&lt;&#x2F;span&gt;&lt;span&gt;|+----------------+-------------+|
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt; dynamodb put-item --table-name contact --item &amp;#39;{&amp;quot;name&amp;quot;:{&amp;quot;S&amp;quot;:&amp;quot;lixia&amp;quot;},&amp;quot;email&amp;quot;:{&amp;quot;S&amp;quot;:&amp;quot;lixia4812@gmail.com&amp;quot;}}&amp;#39; --return-consumed-capacity TOTAL
&lt;&#x2F;span&gt;&lt;span&gt;----------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|             PutItem            |
&lt;&#x2F;span&gt;&lt;span&gt;+--------------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;||       ConsumedCapacity       ||
&lt;&#x2F;span&gt;&lt;span&gt;|+----------------+-------------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  CapacityUnits |  TableName  ||
&lt;&#x2F;span&gt;&lt;span&gt;|+----------------+-------------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  1.0           |  contact    ||
&lt;&#x2F;span&gt;&lt;span&gt;|+----------------+-------------+|
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;dynamodb-cha-kan-shu-ju&quot;&gt;dynamodb 查看数据&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; dynamodb list-tables
&lt;&#x2F;span&gt;&lt;span&gt;---------------
&lt;&#x2F;span&gt;&lt;span&gt;| ListTables  |
&lt;&#x2F;span&gt;&lt;span&gt;+-------------+
&lt;&#x2F;span&gt;&lt;span&gt;||TableNames ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-----------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  contact  ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-----------+|
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt; dynamodb scan --table-name contact
&lt;&#x2F;span&gt;&lt;span&gt;-----------------------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|                    Scan                     |
&lt;&#x2F;span&gt;&lt;span&gt;+-------------------+--------+----------------+
&lt;&#x2F;span&gt;&lt;span&gt;| ConsumedCapacity  | Count  | ScannedCount   |
&lt;&#x2F;span&gt;&lt;span&gt;+-------------------+--------+----------------+
&lt;&#x2F;span&gt;&lt;span&gt;|  None             |  2     |  2             |
&lt;&#x2F;span&gt;&lt;span&gt;+-------------------+--------+----------------+
&lt;&#x2F;span&gt;&lt;span&gt;||                   Items                   ||
&lt;&#x2F;span&gt;&lt;span&gt;|||                  email                  |||
&lt;&#x2F;span&gt;&lt;span&gt;||+------+----------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  S   |  qpj4812@gmail.com               |||
&lt;&#x2F;span&gt;&lt;span&gt;||+------+----------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                  name                   |||
&lt;&#x2F;span&gt;&lt;span&gt;||+----------+------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  S       |  xiao qiao                   |||
&lt;&#x2F;span&gt;&lt;span&gt;||+----------+------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;||                   Items                   ||
&lt;&#x2F;span&gt;&lt;span&gt;|||                  email                  |||
&lt;&#x2F;span&gt;&lt;span&gt;||+------+----------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  S   |  lixia4812@gmail.com             |||
&lt;&#x2F;span&gt;&lt;span&gt;||+------+----------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                  name                   |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------------+---------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  S          |  lixia                    |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------------+---------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;ru-he-chuang-jian-bing-shi-yong-aws-cli-guan-li-ec2shi-li&quot;&gt;如何创建并使用 AWS Cli 管理 ec2实例&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;us-east-2.console.aws.amazon.com&#x2F;ec2&#x2F;home?region=us-east-2#Home&quot;&gt;https:&#x2F;&#x2F;us-east-2.console.aws.amazon.com&#x2F;ec2&#x2F;home?region=us-east-2#Home&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;qian-zhi-tiao-jian&quot;&gt;前置条件&lt;&#x2F;h3&gt;
&lt;p&gt;密钥对&lt;&#x2F;p&gt;
&lt;p&gt;容量&lt;&#x2F;p&gt;
&lt;p&gt;安全组&lt;&#x2F;p&gt;
&lt;h3 id=&quot;1-chuang-jian-yi-ge-mi-yao-dui&quot;&gt;1 创建一个密钥对&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; ec2 create-key-pair --key-name kgptalkie --query &amp;#39;KeyMaterial&amp;#39; --output text &amp;gt; kgptalkie.pem
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;aws-cli-dynamodb&#x2F;assets&#x2F;image-20230902170750838.png&quot; alt=&quot;image-20230902170750838&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-tian-jia-zhi-du-quan-xian&quot;&gt;2 添加只读权限&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;~ via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜ chmod 400 kgptalkie.pem
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;~ via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;3-miao-shu-mi-yao-dui&quot;&gt;3 描述密钥对&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;~ via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜ aws-shell
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt; ec2 describe-key-pairs --key-names kgptalkie
&lt;&#x2F;span&gt;&lt;span&gt;------------------------------------------------------------------------------------------------------------------------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|                                                               DescribeKeyPairs                                                               |
&lt;&#x2F;span&gt;&lt;span&gt;+----------------------------------------------------------------------------------------------------------------------------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;||                                                                  KeyPairs                                                                  ||
&lt;&#x2F;span&gt;&lt;span&gt;|+--------------------------+---------------------------------------------------------------+------------+------------------------+-----------+|
&lt;&#x2F;span&gt;&lt;span&gt;||        CreateTime        |                        KeyFingerprint                         |  KeyName   |       KeyPairId        |  KeyType  ||
&lt;&#x2F;span&gt;&lt;span&gt;|+--------------------------+---------------------------------------------------------------+------------+------------------------+-----------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  2023-09-02T09:04:11.669Z|  5e:06:ea:24:2a:38:3b:c5:91:60:9b:db:8f:14:4f:f5:ae:c7:f2:c0  |  kgptalkie |  key-055dcede4aa2d400c |  rsa      ||
&lt;&#x2F;span&gt;&lt;span&gt;|+--------------------------+---------------------------------------------------------------+------------+------------------------+-----------+|
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-shan-chu-mi-yao-dui&quot;&gt;4 删除密钥对&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; ec2 delete-key-pair --key-name kgptalkie
&lt;&#x2F;span&gt;&lt;span&gt;-------------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|           DeleteKeyPair           |
&lt;&#x2F;span&gt;&lt;span&gt;+------------------------+----------+
&lt;&#x2F;span&gt;&lt;span&gt;|        KeyPairId       | Return   |
&lt;&#x2F;span&gt;&lt;span&gt;+------------------------+----------+
&lt;&#x2F;span&gt;&lt;span&gt;|  key-055dcede4aa2d400c |  True    |
&lt;&#x2F;span&gt;&lt;span&gt;+------------------------+----------+
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;shi-yong-aws-chuang-jian-an-quan-zu-bing-geng-xin&quot;&gt;使用 Aws 创建安全组并更新&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; ec2 create-security-group --group-name my-sg --description &amp;quot;my sg group&amp;quot; --vpc-id vpc-0202e1374ee1fbf85
&lt;&#x2F;span&gt;&lt;span&gt;-------------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|        CreateSecurityGroup        |
&lt;&#x2F;span&gt;&lt;span&gt;+----------+------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;|  GroupId |  sg-02a39ddd15525edfb  |
&lt;&#x2F;span&gt;&lt;span&gt;+----------+------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;tian-jia-ec2-shi-li-ru-zhan-gui-ze-xiang-an-quan-zu-tian-jia-gui-ze&quot;&gt;添加ec2 实例入站规则（向安全组添加规则）&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; ec2 authorize-security-group-ingress --group-id sg-02a39ddd15525edfb --protocol tcp --port 0-65535 --cidr 0.0.0.0&#x2F;0
&lt;&#x2F;span&gt;&lt;span&gt;----------------------------------------------------------------------------------------------------------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|                                                  AuthorizeSecurityGroupIngress                                                 |
&lt;&#x2F;span&gt;&lt;span&gt;+----------------------------------------------------------------------+---------------------------------------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;|  Return                                                              |  True                                                   |
&lt;&#x2F;span&gt;&lt;span&gt;+----------------------------------------------------------------------+---------------------------------------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;||                                                      SecurityGroupRules                                                      ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-----------+-----------+-----------------------+---------------+-------------+-----------+-------------------------+----------+|
&lt;&#x2F;span&gt;&lt;span&gt;|| CidrIpv4  | FromPort  |        GroupId        | GroupOwnerId  | IpProtocol  | IsEgress  |   SecurityGroupRuleId   | ToPort   ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-----------+-----------+-----------------------+---------------+-------------+-----------+-------------------------+----------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  0.0.0.0&#x2F;0|  0        |  sg-02a39ddd15525edfb |  386159697246 |  tcp        |  False    |  sgr-0b8b4eb60a5f4671a  |  65535   ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-----------+-----------+-----------------------+---------------+-------------+-----------+-------------------------+----------+|
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;aws-cli-dynamodb&#x2F;assets&#x2F;image-20230903110335120.png&quot; alt=&quot;image-20230903110335120&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cha-xun-an-quan-zu-miao-shu&quot;&gt;查询安全组描述&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; ec2 describe-security-groups --group-ids sg-02a39ddd15525edfb
&lt;&#x2F;span&gt;&lt;span&gt;-------------------------------------------------------------------------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|                                    DescribeSecurityGroups                                     |
&lt;&#x2F;span&gt;&lt;span&gt;+-----------------------------------------------------------------------------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;||                                       SecurityGroups                                        ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-------------+------------------------+------------+---------------+-------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;|| Description |        GroupId         | GroupName  |    OwnerId    |          VpcId          ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-------------+------------------------+------------+---------------+-------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  my sg group|  sg-02a39ddd15525edfb  |  my-sg     |  386159697246 |  vpc-0202e1374ee1fbf85  ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-------------+------------------------+------------+---------------+-------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;|||                                       IpPermissions                                       |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------+-----------------------------------+-------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||          FromPort           |            IpProtocol             |         ToPort          |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------+-----------------------------------+-------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  0                          |  tcp                              |  65535                  |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------+-----------------------------------+-------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                        IpRanges                                         ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                         CidrIp                                          ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  0.0.0.0&#x2F;0                                                                              ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;|||                                    IpPermissionsEgress                                    |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------------------------------------------------------------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                                        IpProtocol                                         |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------------------------------------------------------------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  -1                                                                                       |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------------------------------------------------------------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                        IpRanges                                         ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                         CidrIp                                          ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  0.0.0.0&#x2F;0                                                                              ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;chuang-jian-aws-ec2-shi-li&quot;&gt;创建 AWS EC2 实例&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.aws.amazon.com&#x2F;AWSEC2&#x2F;latest&#x2F;UserGuide&#x2F;concepts.html&quot;&gt;https:&#x2F;&#x2F;docs.aws.amazon.com&#x2F;AWSEC2&#x2F;latest&#x2F;UserGuide&#x2F;concepts.html&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.aws.amazon.com&#x2F;AWSEC2&#x2F;latest&#x2F;UserGuide&#x2F;identify_ec2_instances.html&quot;&gt;https:&#x2F;&#x2F;docs.aws.amazon.com&#x2F;AWSEC2&#x2F;latest&#x2F;UserGuide&#x2F;identify_ec2_instances.html&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; ec2 run-instances --image-id ami-0cf0e376c672104d6 --count 1 --instance-type t2.micro --key-name kgptalkie --security-group-ids sg-02a39ddd15525edfb --subnet-id subnet-06ea29a210f12daa7
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;-----------------------------------------------------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|                               RunInstances                                |
&lt;&#x2F;span&gt;&lt;span&gt;+-------------------------------+-------------------------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;|  OwnerId                      |  386159697246                             |
&lt;&#x2F;span&gt;&lt;span&gt;|  ReservationId                |  r-061539ad22b7e9c1e                      |
&lt;&#x2F;span&gt;&lt;span&gt;+-------------------------------+-------------------------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;||                                Instances                                ||
&lt;&#x2F;span&gt;&lt;span&gt;|+--------------------------+----------------------------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  AmiLaunchIndex          |  0                                           ||
&lt;&#x2F;span&gt;&lt;span&gt;||  Architecture            |  x86_64                                      ||
&lt;&#x2F;span&gt;&lt;span&gt;||  BootMode                |  uefi-preferred                              ||
&lt;&#x2F;span&gt;&lt;span&gt;||  ClientToken             |  47d5bc44-90c8-4274-b92b-fcdfe1192230        ||
&lt;&#x2F;span&gt;&lt;span&gt;||  CurrentInstanceBootMode |  legacy-bios                                 ||
&lt;&#x2F;span&gt;&lt;span&gt;||  EbsOptimized            |  False                                       ||
&lt;&#x2F;span&gt;&lt;span&gt;||  EnaSupport              |  True                                        ||
&lt;&#x2F;span&gt;&lt;span&gt;||  Hypervisor              |  xen                                         ||
&lt;&#x2F;span&gt;&lt;span&gt;||  ImageId                 |  ami-0cf0e376c672104d6                       ||
&lt;&#x2F;span&gt;&lt;span&gt;||  InstanceId              |  i-01c751f6c8019edd3                         ||
&lt;&#x2F;span&gt;&lt;span&gt;||  InstanceType            |  t2.micro                                    ||
&lt;&#x2F;span&gt;&lt;span&gt;||  KeyName                 |  kgptalkie                                   ||
&lt;&#x2F;span&gt;&lt;span&gt;||  LaunchTime              |  2023-09-03T07:32:57.000Z                    ||
&lt;&#x2F;span&gt;&lt;span&gt;||  PrivateDnsName          |  ip-172-31-39-13.us-east-2.compute.internal  ||
&lt;&#x2F;span&gt;&lt;span&gt;||  PrivateIpAddress        |  172.31.39.13                                ||
&lt;&#x2F;span&gt;&lt;span&gt;||  PublicDnsName           |                                              ||
&lt;&#x2F;span&gt;&lt;span&gt;||  RootDeviceName          |  &#x2F;dev&#x2F;xvda                                   ||
&lt;&#x2F;span&gt;&lt;span&gt;||  RootDeviceType          |  ebs                                         ||
&lt;&#x2F;span&gt;&lt;span&gt;||  SourceDestCheck         |  True                                        ||
&lt;&#x2F;span&gt;&lt;span&gt;||  StateTransitionReason   |                                              ||
&lt;&#x2F;span&gt;&lt;span&gt;||  SubnetId                |  subnet-06ea29a210f12daa7                    ||
&lt;&#x2F;span&gt;&lt;span&gt;||  VirtualizationType      |  hvm                                         ||
&lt;&#x2F;span&gt;&lt;span&gt;||  VpcId                   |  vpc-0202e1374ee1fbf85                       ||
&lt;&#x2F;span&gt;&lt;span&gt;|+--------------------------+----------------------------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;|||                   CapacityReservationSpecification                    |||
&lt;&#x2F;span&gt;&lt;span&gt;||+---------------------------------------------------------+-------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  CapacityReservationPreference                          |  open       |||
&lt;&#x2F;span&gt;&lt;span&gt;||+---------------------------------------------------------+-------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                              CpuOptions                               |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------------------------------------------------------+---------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  CoreCount                                            |  1            |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  ThreadsPerCore                                       |  1            |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------------------------------------------------------+---------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                            EnclaveOptions                             |||
&lt;&#x2F;span&gt;&lt;span&gt;||+--------------------------------------+--------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Enabled                             |  False                         |||
&lt;&#x2F;span&gt;&lt;span&gt;||+--------------------------------------+--------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                          MaintenanceOptions                           |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------------------+-----------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  AutoRecovery                           |  default                    |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------------------+-----------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                            MetadataOptions                            |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------------------------------------------------+---------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  HttpEndpoint                                   |  enabled            |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  HttpProtocolIpv6                               |  disabled           |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  HttpPutResponseHopLimit                        |  2                  |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  HttpTokens                                     |  required           |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  InstanceMetadataTags                           |  disabled           |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  State                                          |  pending            |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------------------------------------------------+---------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                              Monitoring                               |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------+-----------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  State                      |  disabled                               |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------+-----------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                           NetworkInterfaces                           |||
&lt;&#x2F;span&gt;&lt;span&gt;||+----------------------+------------------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Description         |                                                |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  InterfaceType       |  interface                                     |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  MacAddress          |  0a:56:76:bf:2b:c9                             |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  NetworkInterfaceId  |  eni-05d1f84d9e05bcc3e                         |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  OwnerId             |  386159697246                                  |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  PrivateDnsName      |  ip-172-31-39-13.us-east-2.compute.internal    |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  PrivateIpAddress    |  172.31.39.13                                  |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  SourceDestCheck     |  True                                          |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Status              |  in-use                                        |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  SubnetId            |  subnet-06ea29a210f12daa7                      |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  VpcId               |  vpc-0202e1374ee1fbf85                         |||
&lt;&#x2F;span&gt;&lt;span&gt;||+----------------------+------------------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;||||                             Attachment                              ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+----------------------------+----------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  AttachTime                |  2023-09-03T07:32:57.000Z              ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  AttachmentId              |  eni-attach-04125c5652501d2e7          ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  DeleteOnTermination       |  True                                  ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  DeviceIndex               |  0                                     ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  NetworkCardIndex          |  0                                     ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  Status                    |  attaching                             ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+----------------------------+----------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                               Groups                                ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------+---------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  GroupId              |  sg-02a39ddd15525edfb                       ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  GroupName            |  my-sg                                      ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------+---------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                         PrivateIpAddresses                          ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+--------------------+------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  Primary           |  True                                          ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  PrivateDnsName    |  ip-172-31-39-13.us-east-2.compute.internal    ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  PrivateIpAddress  |  172.31.39.13                                  ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+--------------------+------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;|||                               Placement                               |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------------------+-----------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  AvailabilityZone                       |  us-east-2c                 |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  GroupName                              |                             |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Tenancy                                |  default                    |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------------------+-----------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                         PrivateDnsNameOptions                         |||
&lt;&#x2F;span&gt;&lt;span&gt;||+------------------------------------------------------+----------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  EnableResourceNameDnsAAAARecord                     |  False         |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  EnableResourceNameDnsARecord                        |  False         |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  HostnameType                                        |  ip-name       |||
&lt;&#x2F;span&gt;&lt;span&gt;||+------------------------------------------------------+----------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                            SecurityGroups                             |||
&lt;&#x2F;span&gt;&lt;span&gt;||+------------------------+----------------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  GroupId               |  sg-02a39ddd15525edfb                        |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  GroupName             |  my-sg                                       |||
&lt;&#x2F;span&gt;&lt;span&gt;||+------------------------+----------------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                                 State                                 |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------+-----------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Code                       |  0                                      |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Name                       |  pending                                |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-----------------------------+-----------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||                              StateReason                              |||
&lt;&#x2F;span&gt;&lt;span&gt;||+----------------------------------+------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Code                            |  pending                           |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Message                         |  pending                           |||
&lt;&#x2F;span&gt;&lt;span&gt;||+----------------------------------+------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;aws-cli-dynamodb&#x2F;assets&#x2F;image-20230903153634099.png&quot; alt=&quot;image-20230903153634099&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;lian-jie-ec2-shi-li&quot;&gt;连接 EC2 实例&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;cha-kan-zheng-zai-yun-xing-de-shi-li-lie-biao&quot;&gt;查看正在运行的实例列表&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; ec2 describe-instances
&lt;&#x2F;span&gt;&lt;span&gt;----------------------------------------------------------------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|                                   DescribeInstances                                  |
&lt;&#x2F;span&gt;&lt;span&gt;+--------------------------------------------------------------------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;||                                    Reservations                                    ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-----------------------------------+------------------------------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  OwnerId                          |  386159697246                                  ||
&lt;&#x2F;span&gt;&lt;span&gt;||  ReservationId                    |  r-061539ad22b7e9c1e                           ||
&lt;&#x2F;span&gt;&lt;span&gt;|+-----------------------------------+------------------------------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;|||                                     Instances                                    |||
&lt;&#x2F;span&gt;&lt;span&gt;||+---------------------------+------------------------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  AmiLaunchIndex           |  0                                                   |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Architecture             |  x86_64                                              |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  BootMode                 |  uefi-preferred                                      |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  ClientToken              |  47d5bc44-90c8-4274-b92b-fcdfe1192230                |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  CurrentInstanceBootMode  |  legacy-bios                                         |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  EbsOptimized             |  False                                               |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  EnaSupport               |  True                                                |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Hypervisor               |  xen                                                 |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  ImageId                  |  ami-0cf0e376c672104d6                               |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  InstanceId               |  i-01c751f6c8019edd3                                 |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  InstanceType             |  t2.micro                                            |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  KeyName                  |  kgptalkie                                           |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  LaunchTime               |  2023-09-03T07:32:57.000Z                            |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  PlatformDetails          |  Linux&#x2F;UNIX                                          |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  PrivateDnsName           |  ip-172-31-39-13.us-east-2.compute.internal          |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  PrivateIpAddress         |  172.31.39.13                                        |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  PublicDnsName            |  ec2-18-216-156-171.us-east-2.compute.amazonaws.com  |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  PublicIpAddress          |  18.216.156.171                                      |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  RootDeviceName           |  &#x2F;dev&#x2F;xvda                                           |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  RootDeviceType           |  ebs                                                 |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  SourceDestCheck          |  True                                                |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  StateTransitionReason    |                                                      |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  SubnetId                 |  subnet-06ea29a210f12daa7                            |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  UsageOperation           |  RunInstances                                        |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  UsageOperationUpdateTime |  2023-09-03T07:32:57.000Z                            |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  VirtualizationType       |  hvm                                                 |||
&lt;&#x2F;span&gt;&lt;span&gt;|||  VpcId                    |  vpc-0202e1374ee1fbf85                               |||
&lt;&#x2F;span&gt;&lt;span&gt;||+---------------------------+------------------------------------------------------+||
&lt;&#x2F;span&gt;&lt;span&gt;||||                               BlockDeviceMappings                              ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------+--------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  DeviceName                             |  &#x2F;dev&#x2F;xvda                           ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------+--------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;|||||                                      Ebs                                     |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+----------------------------------+-------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  AttachTime                      |  2023-09-03T07:32:58.000Z                 |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  DeleteOnTermination             |  True                                     |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  Status                          |  attached                                 |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  VolumeId                        |  vol-067989491145de4dc                    |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+----------------------------------+-------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;||||                        CapacityReservationSpecification                        ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+----------------------------------------------------------------+---------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  CapacityReservationPreference                                 |  open         ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+----------------------------------------------------------------+---------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                   CpuOptions                                   ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+--------------------------------------------------------------+-----------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  CoreCount                                                   |  1              ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  ThreadsPerCore                                              |  1              ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+--------------------------------------------------------------+-----------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                 EnclaveOptions                                 ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-------------------------------------------+------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  Enabled                                  |  False                             ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-------------------------------------------+------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                               HibernationOptions                               ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+------------------------------------------------+-------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  Configured                                    |  False                        ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+------------------------------------------------+-------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                               MaintenanceOptions                               ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------------+--------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  AutoRecovery                                 |  default                       ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-----------------------------------------------+--------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                 MetadataOptions                                ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-------------------------------------------------------+------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  HttpEndpoint                                         |  enabled               ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  HttpProtocolIpv6                                     |  disabled              ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  HttpPutResponseHopLimit                              |  2                     ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  HttpTokens                                           |  required              ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  InstanceMetadataTags                                 |  disabled              ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  State                                                |  applied               ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-------------------------------------------------------+------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                   Monitoring                                   ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+---------------------------------+----------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  State                          |  disabled                                    ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+---------------------------------+----------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                NetworkInterfaces                               ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-------------------------+------------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  Description            |                                                      ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  InterfaceType          |  interface                                           ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  MacAddress             |  0a:56:76:bf:2b:c9                                   ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  NetworkInterfaceId     |  eni-05d1f84d9e05bcc3e                               ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  OwnerId                |  386159697246                                        ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  PrivateDnsName         |  ip-172-31-39-13.us-east-2.compute.internal          ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  PrivateIpAddress       |  172.31.39.13                                        ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  SourceDestCheck        |  True                                                ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  Status                 |  in-use                                              ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  SubnetId               |  subnet-06ea29a210f12daa7                            ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  VpcId                  |  vpc-0202e1374ee1fbf85                               ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+-------------------------+------------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;|||||                                  Association                                 |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+-----------------+------------------------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  IpOwnerId      |  amazon                                                    |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  PublicDnsName  |  ec2-18-216-156-171.us-east-2.compute.amazonaws.com        |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  PublicIp       |  18.216.156.171                                            |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+-----------------+------------------------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||                                  Attachment                                  |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+-------------------------------+----------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  AttachTime                   |  2023-09-03T07:32:57.000Z                    |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  AttachmentId                 |  eni-attach-04125c5652501d2e7                |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  DeleteOnTermination          |  True                                        |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  DeviceIndex                  |  0                                           |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  NetworkCardIndex             |  0                                           |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  Status                       |  attached                                    |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+-------------------------------+----------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||                                    Groups                                    |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+--------------------------+---------------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  GroupId                 |  sg-02a39ddd15525edfb                             |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  GroupName               |  my-sg                                            |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+--------------------------+---------------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||                              PrivateIpAddresses                              |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+----------------------+-------------------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  Primary             |  True                                                 |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  PrivateDnsName      |  ip-172-31-39-13.us-east-2.compute.internal           |||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||  PrivateIpAddress    |  172.31.39.13                                         |||||
&lt;&#x2F;span&gt;&lt;span&gt;||||+----------------------+-------------------------------------------------------+||||
&lt;&#x2F;span&gt;&lt;span&gt;||||||                                 Association                                ||||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||+-----------------+----------------------------------------------------------+|||||
&lt;&#x2F;span&gt;&lt;span&gt;||||||  IpOwnerId      |  amazon                                                  ||||||
&lt;&#x2F;span&gt;&lt;span&gt;||||||  PublicDnsName  |  ec2-18-216-156-171.us-east-2.compute.amazonaws.com      ||||||
&lt;&#x2F;span&gt;&lt;span&gt;||||||  PublicIp       |  18.216.156.171                                          ||||||
&lt;&#x2F;span&gt;&lt;span&gt;|||||+-----------------+----------------------------------------------------------+|||||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                    Placement                                   ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+----------------------------------------------+---------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  AvailabilityZone                            |  us-east-2c                     ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  GroupName                                   |                                 ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  Tenancy                                     |  default                        ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+----------------------------------------------+---------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                              PrivateDnsNameOptions                             ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+------------------------------------------------------------+-------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  EnableResourceNameDnsAAAARecord                           |  False            ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  EnableResourceNameDnsARecord                              |  False            ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  HostnameType                                              |  ip-name          ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+------------------------------------------------------------+-------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                 SecurityGroups                                 ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+---------------------------+----------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  GroupId                  |  sg-02a39ddd15525edfb                              ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  GroupName                |  my-sg                                             ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+---------------------------+----------------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||                                      State                                     ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+---------------------------------+----------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;||||  Code                           |  16                                          ||||
&lt;&#x2F;span&gt;&lt;span&gt;||||  Name                           |  running                                     ||||
&lt;&#x2F;span&gt;&lt;span&gt;|||+---------------------------------+----------------------------------------------+|||
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;lian-jie-shi-bai-quan-xian-ju-jue&quot;&gt;连接失败 权限拒绝&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;~ via 🅒 base
&lt;&#x2F;span&gt;&lt;span&gt;➜ ssh -i kgptalkie.pem ubuntu@18.216.156.171
&lt;&#x2F;span&gt;&lt;span&gt;The authenticity of host &amp;#39;18.216.156.171 (18.216.156.171)&amp;#39; can&amp;#39;t be established.
&lt;&#x2F;span&gt;&lt;span&gt;ED25519 key fingerprint is SHA256:xAUdJEdlHd3yi4Pl7+k3NbwAy4WA1Gb7v9qNndJ5xZE.
&lt;&#x2F;span&gt;&lt;span&gt;This key is not known by any other names
&lt;&#x2F;span&gt;&lt;span&gt;Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? yes
&lt;&#x2F;span&gt;&lt;span&gt;Warning: Permanently added &amp;#39;18.216.156.171&amp;#39; (ED25519) to the list of known hosts.
&lt;&#x2F;span&gt;&lt;span&gt;ubuntu@18.216.156.171: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;~ via 🅒 base took 9.9s
&lt;&#x2F;span&gt;&lt;span&gt;➜
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;cheng-gong-lian-jie&quot;&gt;成功连接&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;~ via 🅒 base took 9.9s
&lt;&#x2F;span&gt;&lt;span&gt;➜ ssh -i kgptalkie.pem ec2-user@18.216.156.171
&lt;&#x2F;span&gt;&lt;span&gt;   ,     #_
&lt;&#x2F;span&gt;&lt;span&gt;   ~\_  ####_        Amazon Linux 2023
&lt;&#x2F;span&gt;&lt;span&gt;  ~~  \_#####\
&lt;&#x2F;span&gt;&lt;span&gt;  ~~     \###|
&lt;&#x2F;span&gt;&lt;span&gt;  ~~       \#&#x2F; ___   https:&#x2F;&#x2F;aws.amazon.com&#x2F;linux&#x2F;amazon-linux-2023
&lt;&#x2F;span&gt;&lt;span&gt;   ~~       V~&amp;#39; &amp;#39;-&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    ~~~         &#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;      ~~._.   _&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;         _&#x2F; _&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;       _&#x2F;m&#x2F;&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;[ec2-user@ip-172-31-39-13 ~]$ ls
&lt;&#x2F;span&gt;&lt;span&gt;[ec2-user@ip-172-31-39-13 ~]$ cd &#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;[ec2-user@ip-172-31-39-13 &#x2F;]$ ls
&lt;&#x2F;span&gt;&lt;span&gt;bin  boot  dev  etc  home  lib  lib64  local  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
&lt;&#x2F;span&gt;&lt;span&gt;[ec2-user@ip-172-31-39-13 &#x2F;]$ exit
&lt;&#x2F;span&gt;&lt;span&gt;logout
&lt;&#x2F;span&gt;&lt;span&gt;Connection to 18.216.156.171 closed.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;~ via 🅒 base took 2m 5.2s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;shan-chu-shi-li&quot;&gt;删除实例&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;guan-bi-zhong-zhi-yun-xing-shi-li&quot;&gt;关闭终止运行实例&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; ec2 terminate-instances --instance-ids i-01c751f6c8019edd3
&lt;&#x2F;span&gt;&lt;span&gt;-------------------------------
&lt;&#x2F;span&gt;&lt;span&gt;|     TerminateInstances      |
&lt;&#x2F;span&gt;&lt;span&gt;+-----------------------------+
&lt;&#x2F;span&gt;&lt;span&gt;||   TerminatingInstances    ||
&lt;&#x2F;span&gt;&lt;span&gt;|+---------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;||        InstanceId         ||
&lt;&#x2F;span&gt;&lt;span&gt;|+---------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;||  i-01c751f6c8019edd3      ||
&lt;&#x2F;span&gt;&lt;span&gt;|+---------------------------+|
&lt;&#x2F;span&gt;&lt;span&gt;|||      CurrentState       |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------+-----------------+||
&lt;&#x2F;span&gt;&lt;span&gt;||| Code  |      Name       |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------+-----------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  32   |  shutting-down  |||
&lt;&#x2F;span&gt;&lt;span&gt;||+-------+-----------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||      PreviousState      |||
&lt;&#x2F;span&gt;&lt;span&gt;||+---------+---------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  Code   |     Name      |||
&lt;&#x2F;span&gt;&lt;span&gt;||+---------+---------------+||
&lt;&#x2F;span&gt;&lt;span&gt;|||  16     |  running      |||
&lt;&#x2F;span&gt;&lt;span&gt;||+---------+---------------+||
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;aws-cli-dynamodb&#x2F;assets&#x2F;image-20230904002032691.png&quot; alt=&quot;image-20230904002032691&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;amazon-s3-he-aws-cli&quot;&gt;Amazon S3 和 AWS cli&lt;&#x2F;h2&gt;
&lt;p&gt;前提&lt;&#x2F;p&gt;
&lt;p&gt;默认凭证设置&lt;&#x2F;p&gt;
&lt;p&gt;存储服务&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;s3.console.aws.amazon.com&#x2F;s3&#x2F;get-started?region=us-east-2&quot;&gt;https:&#x2F;&#x2F;s3.console.aws.amazon.com&#x2F;s3&#x2F;get-started?region=us-east-2&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;存储桶&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chuang-jian-cun-chu-tong&quot;&gt;创建存储桶&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; s3 help
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt; s3 mb s3:&#x2F;&#x2F;kgptalkie
&lt;&#x2F;span&gt;&lt;span&gt;make_bucket failed: s3:&#x2F;&#x2F;kgptalkie An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available. The bucket namespace is shared by all users of the system. Please select a different name and try again.
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt; s3 mb s3:&#x2F;&#x2F;kgptalkie1
&lt;&#x2F;span&gt;&lt;span&gt;make_bucket: kgptalkie1
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;aws-cli-dynamodb&#x2F;assets&#x2F;image-20230904003140980.png&quot; alt=&quot;image-20230904003140980&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cha-kan-suo-you-cun-chu-tong&quot;&gt;查看所有存储桶&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; s3 ls
&lt;&#x2F;span&gt;&lt;span&gt;2023-09-04 00:30:49 kgptalkie1
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt; s3 ls kgptalkie1
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;shan-chu-cun-chu-tong&quot;&gt;删除存储桶&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; s3 rb s3:&#x2F;&#x2F;kgptalkie1
&lt;&#x2F;span&gt;&lt;span&gt;remove_bucket: kgptalkie1
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;shan-chu-bu-cun-zai-de-cun-chu-tong&quot;&gt;删除不存在的存储桶&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;shell&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-shell &quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;aws&amp;gt; s3 rb s3:&#x2F;&#x2F;kgptalkie1 --force
&lt;&#x2F;span&gt;&lt;span&gt;fatal error: An error occurred (NoSuchBucket) when calling the ListObjectsV2 operation: The specified bucket does not exist
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;remove_bucket failed: Unable to delete all objects in the bucket, bucket will not be deleted.
&lt;&#x2F;span&gt;&lt;span&gt;aws&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>数据结构与算法（Python版）之算法分析</title>
        <published>2023-03-24T21:47:15+08:00</published>
        <updated>2023-03-24T21:47:15+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/algorithm2/"/>
        <id>https://qiaopengjun5162.github.io/algorithm2/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/algorithm2/">&lt;h1 id=&quot;er-suan-fa-fen-xi&quot;&gt;二、算法分析&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;201-shen-me-shi-suan-fa-fen-xi&quot;&gt;201 什么是算法分析&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;dui-bi-cheng-xu-huan-shi-suan-fa&quot;&gt;对比程序，还是算法？&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;如何对比两个程序？
&lt;ul&gt;
&lt;li&gt;看起来不同，但解决同一个问题的程序，哪个“更好”？&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;程序和算法的区别
&lt;ul&gt;
&lt;li&gt;算法是对问题解决的分布描述&lt;&#x2F;li&gt;
&lt;li&gt;程序则是采用某种编程语言实现的算法，同一个算法通过不同的程序员采用不同的编程语言，能产生很多程序&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;lei-ji-qiu-he-wen-ti&quot;&gt;累计求和问题&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;我们来看一段程序，完成从 1 到 n 的累加，输出总和
&lt;ul&gt;
&lt;li&gt;设置累计变量 = 0&lt;&#x2F;li&gt;
&lt;li&gt;从 1 到 n 循环，逐次累加到累计变量&lt;&#x2F;li&gt;
&lt;li&gt;返回累计变量&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;sum0fN&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;i
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;theSum
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(sum0fN(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;再看第二段程序，是否感觉怪怪的？
&lt;ul&gt;
&lt;li&gt;但实际上本程序功能与前面那段相同&lt;&#x2F;li&gt;
&lt;li&gt;这段程序失败之处在于：变了命名词不达意，以及包含了无用的垃圾代码&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;tom&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  fred &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;bill &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, tom &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    barney &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;bill
&lt;&#x2F;span&gt;&lt;span&gt;    fred &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;fred &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;barney
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;fred
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(foo(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;suan-fa-fen-xi-de-gai-nian&quot;&gt;算法分析的概念&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;比较程序的“好坏”，有很多因素
&lt;ul&gt;
&lt;li&gt;代码风格、可读性等等&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;我们主要感兴趣的是算法本身特性&lt;&#x2F;li&gt;
&lt;li&gt;算法分析主要就是从计算资源消耗的角度来评判和比较算法
&lt;ul&gt;
&lt;li&gt;更高效利用计算资源，或者更少占用计算资源的算法，就是好算法&lt;&#x2F;li&gt;
&lt;li&gt;从这个角度，前述两段程序实际上是基本相同的，它们都采用了一样的算法来解决累计求和问题&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shuo-dao-dai-ma-feng-ge-he-ke-du-xing&quot;&gt;说到代码风格和可读性&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;为什么Python的强制缩进是好的？
&lt;ul&gt;
&lt;li&gt;语句块功能和视觉效果统一&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;苹果公司的一个低级Bug
&lt;ul&gt;
&lt;li&gt;由于c语言源代码书写缩进对齐的疏忽&lt;&#x2F;li&gt;
&lt;li&gt;造成SSL连接验证被跳过&lt;&#x2F;li&gt;
&lt;li&gt;2014.2.22修正iOS7.0.6&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;代码不像看起来那样运行&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ji-suan-zi-yuan-zhi-biao&quot;&gt;计算资源指标&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;那么何为计算资源？&lt;&#x2F;li&gt;
&lt;li&gt;一种是算法解决问题过程中需要的存储空间或内存
&lt;ul&gt;
&lt;li&gt;但存储空间受到问题自身数据规模的变化影响&lt;&#x2F;li&gt;
&lt;li&gt;要区分哪些存储空间是问题本身描述所需，哪些是算法占用，不容易&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;另一种是算法的执行时间
&lt;ul&gt;
&lt;li&gt;我们可以对程序进行实际运行测试，获得真实的运行时间&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;yun-xing-shi-jian-jian-ce&quot;&gt;运行时间检测&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Python中有一个time模块，可以获取计算机系统当前时间
&lt;ul&gt;
&lt;li&gt;在算法开始前和结束后分别记录系统时间，即可得到运行时间&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;time
&lt;&#x2F;span&gt;&lt;span&gt;time.time()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;累计求和程序的运行时间检测
&lt;ul&gt;
&lt;li&gt;用time 检测总运行时间&lt;&#x2F;li&gt;
&lt;li&gt;返回累计和，以及运行时间（秒）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;time
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;sum0fN2&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  start &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;time.time()
&lt;&#x2F;span&gt;&lt;span&gt;  theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;i
&lt;&#x2F;span&gt;&lt;span&gt;  end &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;time.time()
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;theSum, end &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;start
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Sum is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; required &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%10.7f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; seconds&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;sum0fN2(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;10000&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;在交互窗口连续运行5次看看
&lt;ul&gt;
&lt;li&gt;1 到 10000累加&lt;&#x2F;li&gt;
&lt;li&gt;每次运行约需 0.0007秒&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;如果累加到100000？
&lt;ul&gt;
&lt;li&gt;看起来运行时间增加到 10000的10倍&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;进一步累加到 1000000？
&lt;ul&gt;
&lt;li&gt;运行时间又是 100000的10倍了&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;di-er-chong-wu-die-dai-de-lei-ji-suan-fa&quot;&gt;第二种无迭代的累计算法&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;利用求和公式的无迭代算法&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;sum0fN3&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  start &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;time.time()
&lt;&#x2F;span&gt;&lt;span&gt;  theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;(n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;  end &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;time.time()
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;theSum, end &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span&gt;start
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;利用同样的方法检测运行时间
&lt;ul&gt;
&lt;li&gt;10000；100000；1000000；10000000；100000000&lt;&#x2F;li&gt;
&lt;li&gt;0.000010 接近于0&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;需要关注的两点
&lt;ul&gt;
&lt;li&gt;这种算法的运行时间比前种都短很多&lt;&#x2F;li&gt;
&lt;li&gt;运行时间与累计对象n的大小没有关系（前种算法是倍数增长关系）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;新算法运行时间几乎与需要累计的数目无关&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;yun-xing-shi-jian-jian-ce-de-fen-xi&quot;&gt;运行时间检测的分析&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;观察一下第一种迭代算法
&lt;ul&gt;
&lt;li&gt;包含了一个循环，可能会执行更多语句&lt;&#x2F;li&gt;
&lt;li&gt;这个循环运行次数跟累加值n有关系，n增加，循环次数也增加&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;sum0fN&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;i
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;theSum
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(sum0fN(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;但关系运行时间的实际检测，有点问题
&lt;ul&gt;
&lt;li&gt;关于编程语言和运行环境&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;同一个算法，采用不同的编程语言编写，放在不同的机器上运行，得到的运行时间会不一样，有时候会大不一样：
&lt;ul&gt;
&lt;li&gt;比如把非迭代算法放在老旧机器上跑，甚至可能慢过新机器上的迭代算法&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;我们需要更好的方法来衡量算法运行时间
&lt;ul&gt;
&lt;li&gt;这个指标与具体的机器、程序、运行时段都无关&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;202-da-obiao-shi-fa&quot;&gt;202 大O表示法&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;suan-fa-shi-jian-du-liang-zhi-biao&quot;&gt;算法时间度量指标&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;一个算法所实施的操作数量或步骤数可作为独立于具体程序&#x2F;机器的度量指标
&lt;ul&gt;
&lt;li&gt;哪种操作跟算法的具体实现无关？&lt;&#x2F;li&gt;
&lt;li&gt;需要一种通用的基本操作来作为运行步骤的计量单位&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;赋值语句是一个合适的选择
&lt;ul&gt;
&lt;li&gt;一条赋值语句同时包含了（表达式）计算和（变量）存储两个基本资源&lt;&#x2F;li&gt;
&lt;li&gt;仔细观察程序设计语言特性，除了与计算资源无关的定义语句外，主要就是三种控制流语句和赋值语句，而控制流仅仅起了组织语句的作用，并不实施处理。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;fu-zhi-yu-ju-zhi-xing-ci-shu&quot;&gt;赋值语句执行次数&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;分析 Sum0fN的赋值语句执行次数
&lt;ul&gt;
&lt;li&gt;对于“问题规模”n&lt;&#x2F;li&gt;
&lt;li&gt;赋值语句数量 T(n) = 1 + n&lt;&#x2F;li&gt;
&lt;li&gt;那么，什么是问题规模？&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;sum0fN&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# 1
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# n
&lt;&#x2F;span&gt;&lt;span&gt;    theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;theSum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;i  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# 1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;theSum
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;wen-ti-gui-mo-ying-xiang-suan-fa-zhi-xing-shi-jian&quot;&gt;问题规模影响算法执行时间&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;问题规模：影响算法执行时间的主要因素&lt;&#x2F;li&gt;
&lt;li&gt;在前n个整数累计求和的算法中，需要累计的整数个数合适作为问题规模的指标
&lt;ul&gt;
&lt;li&gt;前 100000个整数求和对比前1000个整数求和，算是同一问题的更大规模&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;算法分析的目标是要找出问题规模会怎么影响一个算法的执行时间&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shu-liang-ji-han-shu-order-of-magnitude&quot;&gt;数量级函数 Order of Magnitude&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;基本操作数量函数 T(n) 的精确值并不是特别重要，重要的是 T(n) 中起决定性因素的主导部分
&lt;ul&gt;
&lt;li&gt;用动态的眼光看，就是当问题规模增大的时候，T(n) 中的一些部分会盖过其它部分的贡献&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;数量级函数描述了 T(n) 中随着n增加而增加速度最快的主导部分
&lt;ul&gt;
&lt;li&gt;称作“大O”表示法，记作o(f(n))，其中 f(n) 表示 T(n) 中的主导部分&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;que-ding-yun-xing-shi-jian-shu-liang-ji-da-ode-fang-fa&quot;&gt;确定运行时间数量级大O的方法&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;例1：T(n) = 1 + n&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;当n增大时，常数1在最终结果中显得越来越无足轻重&lt;&#x2F;li&gt;
&lt;li&gt;所以可以去掉1，保留n 作为主要部分，运行时间数量级就是O(n)&lt;&#x2F;li&gt;
&lt;li&gt;O(n)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;例2：T(n)=5n²+27n+1005&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;当n很小时，常数1005其决定性作用&lt;&#x2F;li&gt;
&lt;li&gt;但当n越来越大，n²项就越来越重要，其它两项对结果的影响则越来越小&lt;&#x2F;li&gt;
&lt;li&gt;同样，n²项中的系数5，对于n²的增长速度来说也影响不大&lt;&#x2F;li&gt;
&lt;li&gt;所以可以在数量级中去掉27n+1005，以及系数5的部分，确定为O（n²）&lt;&#x2F;li&gt;
&lt;li&gt;O(n²)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ying-xiang-suan-fa-yun-xing-shi-jian-de-qi-ta-yin-su&quot;&gt;影响算法运行时间的其它因素&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;有时决定运行时间的不仅是问题规模&lt;&#x2F;li&gt;
&lt;li&gt;某些具体数据也会影响算法运行时间
&lt;ul&gt;
&lt;li&gt;分为最好、最差和平均情况，平均状况体现了算法的主流性能&lt;&#x2F;li&gt;
&lt;li&gt;对算法的分析要看主流，而不被某几种特定的运行状况所迷惑&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;chang-jian-de-da-oshu-liang-ji-han-shu&quot;&gt;常见的大O数量级函数&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;通常当n较小时，难以确定其数量级&lt;&#x2F;li&gt;
&lt;li&gt;当n增长到较大时，容易看出其主要变化量级&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;f(n)&lt;&#x2F;th&gt;&lt;th&gt;名称&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;常数&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;log(n)&lt;&#x2F;td&gt;&lt;td&gt;对数&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;n&lt;&#x2F;td&gt;&lt;td&gt;线性&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;n*log(n)&lt;&#x2F;td&gt;&lt;td&gt;对数线性&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;n²&lt;&#x2F;td&gt;&lt;td&gt;平方&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;n³&lt;&#x2F;td&gt;&lt;td&gt;立方&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;2^n&lt;&#x2F;td&gt;&lt;td&gt;指数&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;cong-dai-ma-fen-xi-que-ding-zhi-xing-shi-jian-shu-liang-ji-han-shu&quot;&gt;从代码分析确定执行时间数量级函数&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;代码赋值语句可以分为4个部分
&lt;ul&gt;
&lt;li&gt;T(n) = 3+3n²+2n+1 = 3n²+2n+4&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;5
&lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;6
&lt;&#x2F;span&gt;&lt;span&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(n):
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(n):
&lt;&#x2F;span&gt;&lt;span&gt;    x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;i
&lt;&#x2F;span&gt;&lt;span&gt;    y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;j
&lt;&#x2F;span&gt;&lt;span&gt;    z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;j
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(n):
&lt;&#x2F;span&gt;&lt;span&gt;  w &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;45
&lt;&#x2F;span&gt;&lt;span&gt;  v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;b
&lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;33
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;仅保留最高阶项n²，去掉所有系数&lt;&#x2F;li&gt;
&lt;li&gt;数量级为 O(n²)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;qi-ta-suan-fa-fu-za-du-biao-shi-fa&quot;&gt;其它算法复杂度表示法&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;大O表示法
&lt;ul&gt;
&lt;li&gt;表示了所有上限中最小的那个上限&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;大Ω表示法
&lt;ul&gt;
&lt;li&gt;表示了所有下限中最大的那个下限&lt;&#x2F;li&gt;
&lt;li&gt;f(n) = Ω(g(n)) 当且仅当 g(n) = o(f(n))&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;大θ表示法
&lt;ul&gt;
&lt;li&gt;如果上下限相同，那么就可以用大θ表示&lt;&#x2F;li&gt;
&lt;li&gt;f(n) = θ(g(n))&lt;&#x2F;li&gt;
&lt;li&gt;当且仅当 f(n) = O(g(n)) 且 f(n) = Ω(g(n))&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;203-bian-wei-ci-pan-duan-wen-ti-shang&quot;&gt;203 “变位词”判断问题（上）&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bian-wei-ci-pan-duan-wen-ti&quot;&gt;“变位词”判断问题&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;问题描述
&lt;ul&gt;
&lt;li&gt;所谓“变位词”是指两个词之间存在组成字母的重新排列关系&lt;&#x2F;li&gt;
&lt;li&gt;如：heart和earth，Python和typhon&lt;&#x2F;li&gt;
&lt;li&gt;为了简单起见，假设参与判断的两个词仅由小写字母构成，而且长度相等&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;解题目标：写一个bool函数，以两个词作为参数，返回这两个词是否变位词&lt;&#x2F;li&gt;
&lt;li&gt;可以很好展示同一问题的不同数量级算法&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jie-fa-1-zhu-zi-jian-cha&quot;&gt;解法1：逐字检查&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;解法思路
&lt;ul&gt;
&lt;li&gt;将词1中的字符逐个到词2中检查是否存在&lt;&#x2F;li&gt;
&lt;li&gt;存在就“打勾”标记（防止重复检查）&lt;&#x2F;li&gt;
&lt;li&gt;如果每个字符都能找到，则两个词是变位词&lt;&#x2F;li&gt;
&lt;li&gt;只要有1个字符找不到，就不是变位词&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;程序技巧
&lt;ul&gt;
&lt;li&gt;实现“打勾”标记：将词2对应字符设为None&lt;&#x2F;li&gt;
&lt;li&gt;由于字符串是不可变类型，需要先复制到列表中&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jie-fa-1-zhu-zi-jian-cha-cheng-xu-dai-ma&quot;&gt;解法1：逐字检查-程序代码&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;anagramSolution1&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;s1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;s2&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  alist &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span&gt;(s2)
&lt;&#x2F;span&gt;&lt;span&gt;  pos1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  stillOK &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;pos1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(s1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;stillOK:
&lt;&#x2F;span&gt;&lt;span&gt;    pos2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    found &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;pos2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(alist) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;and not &lt;&#x2F;span&gt;&lt;span&gt;found:
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;s1[pos1] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;alist[pos2]:
&lt;&#x2F;span&gt;&lt;span&gt;        found &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        pos2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;pos2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;found:
&lt;&#x2F;span&gt;&lt;span&gt;      alist[pos2] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      stillOK &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;    pos1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;pos1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;stillOk
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(anagramSolution1(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;abcd&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;dcba&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;jie-fa-1-zhu-zi-jian-cha-suan-fa-fen-xi&quot;&gt;解法1：逐字检查-算法分析&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;问题规模：词中包含的字符个数n&lt;&#x2F;li&gt;
&lt;li&gt;主要部分在与两重循环
&lt;ul&gt;
&lt;li&gt;外层循环遍历 s1 每个字符，将内层循环执行n次&lt;&#x2F;li&gt;
&lt;li&gt;而内层循环在s2中查找字符，每个字符的对比次数，分别是1、2…n中的一个，而且各不相同&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;所以总执行次数是 1 + 2 + 3 + ……+ n
&lt;ul&gt;
&lt;li&gt;可知其数量级为 O(n²)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jie-fa-2-pai-xu-bi-jiao&quot;&gt;解法2：排序比较&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;解题思路
&lt;ul&gt;
&lt;li&gt;将两个字符串都安装字母顺序排好序&lt;&#x2F;li&gt;
&lt;li&gt;再逐个字符对比是否相同，如果相同则是变为词&lt;&#x2F;li&gt;
&lt;li&gt;有任何不同就不是变位词&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jie-fa-2-pai-xu-bi-jiao-cheng-xu-dai-ma&quot;&gt;解法2：排序比较-程序代码&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;anagramSolution2&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;s1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;s2&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  alist1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span&gt;(s1)
&lt;&#x2F;span&gt;&lt;span&gt;  alist2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span&gt;(s2)
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  alist1.sort()
&lt;&#x2F;span&gt;&lt;span&gt;  alist2.sort()
&lt;&#x2F;span&gt;&lt;span&gt;  pos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  matches &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;pos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(s1) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;matches:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;alist1[pos] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;alist2[pos]:
&lt;&#x2F;span&gt;&lt;span&gt;      pos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;pos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      matches &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;matches
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(anagramSolution2(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;abcde&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;edcba&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;jie-fa-2-pai-xu-bi-jiao-suan-fa-fen-xi&quot;&gt;解法2： 排序比较-算法分析&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;粗看上去，本算法只有一个循环，最多执行n次，数量级是 O(n)
&lt;ul&gt;
&lt;li&gt;但循环前面的两个sort并不是无代价的&lt;&#x2F;li&gt;
&lt;li&gt;如果查询下后面的章节，会发现排序算法采用不同的解决方案，其运行时间数量级差不多是 O(n²) 或者 O(n log n)，大过循环的O(n)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;所以本算法时间主导的步骤是排序步骤&lt;&#x2F;li&gt;
&lt;li&gt;本算法的运行时间数量级就等于排序过程的数量级O(n log n)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;204-bian-wei-ci-pan-duan-wen-ti-xia&quot;&gt;204 “变位词”判断问题（下）&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;jie-fa-3-bao-li-fa&quot;&gt;解法3：暴力法&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;暴力法解题思路为：穷尽所有可能组合&lt;&#x2F;li&gt;
&lt;li&gt;将s1 中出现的字符进行全排列，再查看 s2 是否出现在全排列列表中&lt;&#x2F;li&gt;
&lt;li&gt;这里最大困难时产生s1所有字符的全排列
&lt;ul&gt;
&lt;li&gt;根据组合数学的结论，如果n个字符进行全排列，其所有可能的字符串个数为n!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;我们已知 n! 的增长速度甚至超过 2^n
&lt;ul&gt;
&lt;li&gt;例如，对于 20 个字符长的词来说，将产生 20! = 2,432,902,008,176,640,000 个候选词&lt;&#x2F;li&gt;
&lt;li&gt;如果每微秒处理1个候选词的话，需要近8万年时间来做完所有的匹配。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;结论：暴力法恐怕不能算是个好算法&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jie-fa-4-ji-shu-bi-jiao&quot;&gt;解法4：计数比较&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;解题思路：对比两个词中每个字母出现的次数，如果26个字母出现的次数都相同的话，这两个字符串就一定是变位词&lt;&#x2F;li&gt;
&lt;li&gt;具体做法：为每个词设置一个 26 位的计数器，先检查每个词，在计数器中设定好每个字母出现的次数&lt;&#x2F;li&gt;
&lt;li&gt;计数完成后，进入比较阶段，看两个字符串的计数器是否相同，如果相同则输出是变位词的结论&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jie-fa-4-ji-shu-bi-jiao-cheng-xu-dai-ma&quot;&gt;解法4：计数比较-程序代码&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;anagramSolution4&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;s1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;s2&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  c1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;26
&lt;&#x2F;span&gt;&lt;span&gt;  c2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;26
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(s1)):
&lt;&#x2F;span&gt;&lt;span&gt;    pos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(s1[i]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;a&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# 分别都计数
&lt;&#x2F;span&gt;&lt;span&gt;    c1[pos] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;c1[pos] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(s2)):
&lt;&#x2F;span&gt;&lt;span&gt;    pos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(s2[i]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;ord&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;a&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    c2[pos] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;c2[pos] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;  j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;  stillOK &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;26 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span&gt;stillOK:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# 计数器比较
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;c1[j] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span&gt;c2[j]:
&lt;&#x2F;span&gt;&lt;span&gt;      j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      stillOK &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;stillOK
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(anagramSolution4(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;apple&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;#39;pleap&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;jie-fa-4-ji-shu-bi-jiao-suan-fa-fen-xi&quot;&gt;解法4：计数比较-算法分析&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;计数比较算法中有3个循环迭代，但不像解法1那样存在嵌套循环
&lt;ul&gt;
&lt;li&gt;前两个循环用于对字符串进行计数，操作次数等于字符长度n&lt;&#x2F;li&gt;
&lt;li&gt;第3个循环用于计数器比较，操作次数总是26次&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;所以总操作次数 T(n) = 2n + 26，其数量级为 O(n)
&lt;ul&gt;
&lt;li&gt;这是一个线性数量级的算法，是4个变位词判断算法中性能最优的&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;值得注意的是，本算法依赖于两个长度为26的计数器列表，来保存字符计数，这相比前3个算法需要更多的存储空间
&lt;ul&gt;
&lt;li&gt;如果考虑由大字符集构成的词（如中文具有上万不同字符），还会需要更多存储空间。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;牺牲存储空间来换取运行时间，或者相反，这种在时间空间之间的取舍和权衡，在选择问题解法的过程中经常会出现。
&lt;ul&gt;
&lt;li&gt;“不可随处小便”，“小处不可随便”&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;思考：把解法4用字典作为计算器修改…&lt;&#x2F;p&gt;
&lt;h2 id=&quot;205-pythonshu-ju-lei-xing-de-xing-neng-shang&quot;&gt;205 Python数据类型的性能（上）&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;pythonshu-ju-lei-xing-de-xing-neng&quot;&gt;Python数据类型的性能&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Python两种内置数据类型上各种操作的大O数量级
&lt;ul&gt;
&lt;li&gt;列表list 和字典 dict 这是两种重要的Python数据类型&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dui-bi-listhe-dictde-cao-zuo&quot;&gt;对比list和dict的操作&lt;&#x2F;h3&gt;
&lt;p&gt;都是容器类型、可变类型&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;类型&lt;&#x2F;th&gt;&lt;th&gt;list&lt;&#x2F;th&gt;&lt;th&gt;dict&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;索引&lt;&#x2F;td&gt;&lt;td&gt;自然数 i&lt;&#x2F;td&gt;&lt;td&gt;不可变类型值 Key&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;添加&lt;&#x2F;td&gt;&lt;td&gt;append、extend、insert&lt;&#x2F;td&gt;&lt;td&gt;b[k] = v&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;删除&lt;&#x2F;td&gt;&lt;td&gt;pop、remove*&lt;&#x2F;td&gt;&lt;td&gt;pop&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;更新&lt;&#x2F;td&gt;&lt;td&gt;a[i] = v&lt;&#x2F;td&gt;&lt;td&gt;b[k] = v&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;正查&lt;&#x2F;td&gt;&lt;td&gt;a[i]、a[i:j]&lt;&#x2F;td&gt;&lt;td&gt;b[k]、copy&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;反查&lt;&#x2F;td&gt;&lt;td&gt;index(v)、count(v)&lt;&#x2F;td&gt;&lt;td&gt;无&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;其它&lt;&#x2F;td&gt;&lt;td&gt;reverse、sort&lt;&#x2F;td&gt;&lt;td&gt;has_key、update&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;list-lie-biao-shu-ju-lei-xing&quot;&gt;List 列表数据类型&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;list 类型各种操作（Interface）的实现方法有很多，如何选择具体哪种实现方法？&lt;&#x2F;li&gt;
&lt;li&gt;总的方案就是，让最常用的操作性能最好，牺牲不太常用的操作
&lt;ul&gt;
&lt;li&gt;80&#x2F;20准则：80%的功能其使用率只有20%&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;list-lie-biao-shu-ju-lei-xing-chang-yong-cao-zuo-xing-neng&quot;&gt;list 列表数据类型常用操作性能&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;最常用的是：按索引取值和赋值（v = a[i]，a[i] = v）
&lt;ul&gt;
&lt;li&gt;由于列表的随机访问特性，这两个操作执行时间与列表大小无关，均为O(1)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;另一个是列表增长，可以选择append() 和 _&lt;em&gt;add&lt;&#x2F;em&gt;_() “+”
&lt;ul&gt;
&lt;li&gt;lst.append(v)，执行时间是O(1)&lt;&#x2F;li&gt;
&lt;li&gt;lst = lst + [v]，执行时间是O(n+k)，其中k是被加的列表长度&lt;&#x2F;li&gt;
&lt;li&gt;选择哪个方法来操作列表，决定了程序的性能&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;4chong-sheng-cheng-qian-nge-zheng-shu-lie-biao-de-fang-fa&quot;&gt;4种生成前n个整数列表的方法&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;首先是循环连接列表（+）方式生成&lt;&#x2F;li&gt;
&lt;li&gt;然后是用append方法添加元素生成&lt;&#x2F;li&gt;
&lt;li&gt;接着用列表推导式来做&lt;&#x2F;li&gt;
&lt;li&gt;最后是Range函数调用转成列表&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;test1&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;  l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;[i]
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;test2&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;  l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    l.append(i)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;test3&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;  l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;[i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;)]
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;test4&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;  l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;shi-yong-timeit-mo-kuai-dui-han-shu-ji-shi&quot;&gt;使用 timeit 模块对函数计时&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;创建一个 Timer 对象，指定需要反复运行的语句和只需要运行一次的“安装语句”&lt;&#x2F;li&gt;
&lt;li&gt;然后调用这个对象的 timeit 方法，其中可以指定反复运行多少次&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;timeit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Timer
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;t1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Timer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;test1()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;from __main__ import test1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;concat &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; seconds&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;t1.timeit(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;t2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Timer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;test2()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;from __main__ import test2&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;append &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; seconds&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;t2.timeit(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;t3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Timer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;test3()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;from __main__ import test3&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;comprehension &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; seconds&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;t3.timeit(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;t4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;Timer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;test4()&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;from __main__ import test4&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;list range &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; seconds&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;t4.timeit(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#fd971f;&quot;&gt;number&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4chong-sheng-cheng-qian-nge-zheng-shu-lie-biao-de-fang-fa-ji-shi&quot;&gt;4种生成前n个整数列表的方法计时&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;我们看到，4种方法运行时间差别很大
&lt;ul&gt;
&lt;li&gt;列表连接（concat）最慢，List range 最快，速度相差近200倍。&lt;&#x2F;li&gt;
&lt;li&gt;append 也要比 concat 快得多&lt;&#x2F;li&gt;
&lt;li&gt;另外，我们注意到列表推导式速度是 append 两倍的样子&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;concat &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1.889487 &lt;&#x2F;span&gt;&lt;span&gt;seconds
&lt;&#x2F;span&gt;&lt;span&gt;append &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0.091561 &lt;&#x2F;span&gt;&lt;span&gt;seconds
&lt;&#x2F;span&gt;&lt;span&gt;comprehension &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0.038418 &lt;&#x2F;span&gt;&lt;span&gt;seconds
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;list &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0.009710 &lt;&#x2F;span&gt;&lt;span&gt;seconds
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;list-ji-ben-cao-zuo-de-da-oshu-liang-ji&quot;&gt;List 基本操作的大O数量级&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Operation&lt;&#x2F;th&gt;&lt;th&gt;Big-O Efficiency&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Index []&lt;&#x2F;td&gt;&lt;td&gt;O(1)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;index assignment&lt;&#x2F;td&gt;&lt;td&gt;O(1)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;append&lt;&#x2F;td&gt;&lt;td&gt;O(1)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;pop()&lt;&#x2F;td&gt;&lt;td&gt;O(1)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;pop(i)&lt;&#x2F;td&gt;&lt;td&gt;O(n)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;insert(i, item)&lt;&#x2F;td&gt;&lt;td&gt;O(n)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;del operator&lt;&#x2F;td&gt;&lt;td&gt;O(n)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;iteration&lt;&#x2F;td&gt;&lt;td&gt;O(n)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;contains(in)&lt;&#x2F;td&gt;&lt;td&gt;O(n)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;get slice [x:y]&lt;&#x2F;td&gt;&lt;td&gt;O(k)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;del slice&lt;&#x2F;td&gt;&lt;td&gt;O(n)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;set slice&lt;&#x2F;td&gt;&lt;td&gt;O(n+k)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;reverse&lt;&#x2F;td&gt;&lt;td&gt;O(n)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;concatenate&lt;&#x2F;td&gt;&lt;td&gt;O(k)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;sort&lt;&#x2F;td&gt;&lt;td&gt;O(n log n)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;multiply&lt;&#x2F;td&gt;&lt;td&gt;O(nk)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;206-pythonshu-ju-lei-xing-de-xing-neng-xia&quot;&gt;206 Python数据类型的性能（下）&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;list-pop-de-ji-shi-shi-yan&quot;&gt;list.pop 的计时试验&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;我们注意到pop这个操作&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;pop() 从列表末尾移除元素，O(1)&lt;&#x2F;li&gt;
&lt;li&gt;pop(i) 从列表中部移除元素，O(n)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;原因在于Python所选择的实现方法&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;从中部移除元素的话，要把移除元素后面的元素&lt;&#x2F;li&gt;
&lt;li&gt;全部向前挪位复制一遍，这个看起来有点笨拙&lt;&#x2F;li&gt;
&lt;li&gt;但这种实现方法能够保证列表按索引取值和赋值的操作很快，达到O(1)&lt;&#x2F;li&gt;
&lt;li&gt;这也算是一种对常用和不常用操作的折衷方案&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;为了验证表中的大O数量级&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>数据结构与算法（Python版）之概述</title>
        <published>2023-03-11T10:47:55+08:00</published>
        <updated>2023-03-11T10:47:55+08:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/algorithm/"/>
        <id>https://qiaopengjun5162.github.io/algorithm/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/algorithm/">&lt;h1 id=&quot;shu-ju-jie-gou-yu-suan-fa-pythonban&quot;&gt;数据结构与算法（Python版）&lt;&#x2F;h1&gt;
&lt;p&gt;课程地址：&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.icourse163.org&#x2F;learn&#x2F;PKU-1206307812?tid=1470091590#&#x2F;learn&#x2F;content?type=detail&amp;amp;id=1253445962&quot;&gt;https:&#x2F;&#x2F;www.icourse163.org&#x2F;learn&#x2F;PKU-1206307812?tid=1470091590#&#x2F;learn&#x2F;content?type=detail&amp;amp;id=1253445962&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;yi-gai-shu&quot;&gt;一、概述&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;101-yin-zi-shu-ju-shi-dai&quot;&gt;101 引子：数据时代&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;shu-ju-jie-gou-yu-suan-fa-shi-jiang-shen-me-de-ke&quot;&gt;数据结构与算法是讲什么的课？&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;首先，这是一门关于编程的课
&lt;ul&gt;
&lt;li&gt;学了Python语言基础之后的进阶课&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;但又不仅仅讲编程&lt;&#x2F;li&gt;
&lt;li&gt;本课为你展示
&lt;ul&gt;
&lt;li&gt;如何把数据组织起来&lt;&#x2F;li&gt;
&lt;li&gt;进行有效的处理&lt;&#x2F;li&gt;
&lt;li&gt;以解决问题&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;数据为什么这么重要？&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;无处不在的数据&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xin-xi-shi-dai-jiu-shi-shu-ju-de-shi-dai&quot;&gt;信息时代就是数据的时代&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;人类在各个领域的生产生活&lt;&#x2F;li&gt;
&lt;li&gt;无时无刻在产生着巨量的数据&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shu-ju-hua-de-ke-xue-ji-shu-gong-cheng-shang-ye&quot;&gt;数据化的科学、技术、工程、商业&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;地球观测系统：地面、地下、空中&lt;&#x2F;li&gt;
&lt;li&gt;地球观测系统：人造地球卫星&lt;&#x2F;li&gt;
&lt;li&gt;地球之外的观测系统：火星车&lt;&#x2F;li&gt;
&lt;li&gt;地球之外的观测系统：太阳探测器&lt;&#x2F;li&gt;
&lt;li&gt;地球之外的观测系统：冥王星探测器&lt;&#x2F;li&gt;
&lt;li&gt;地球之外的观测系统：哈勃望远镜&lt;&#x2F;li&gt;
&lt;li&gt;地球重力场分布数据&lt;&#x2F;li&gt;
&lt;li&gt;地形高程和地貌数据&lt;&#x2F;li&gt;
&lt;li&gt;地下岩层结构和矿藏数据&lt;&#x2F;li&gt;
&lt;li&gt;太阳风和空间气象数据&lt;&#x2F;li&gt;
&lt;li&gt;高分辨率卫星影像数据&lt;&#x2F;li&gt;
&lt;li&gt;实时交通流量、路况数据&lt;&#x2F;li&gt;
&lt;li&gt;引力波探测的突破（2015.9.14）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shu-ju-zhu-yi-dataism&quot;&gt;数据主义（Dataism）&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;整个世界就是数据及其算法&lt;&#x2F;li&gt;
&lt;li&gt;尤瓦尔·赫拉利：《未来简史》
&lt;ul&gt;
&lt;li&gt;将生命活动理解为数据流传输及处理算法，人类智慧和自由意识也无法例外&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shu-ju-zhi-qiao-tong-xiang-yu-zhou&quot;&gt;数据之桥，通向宇宙&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;超时空接触.Contact.1997  (电影)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;102-wen-ti-qiu-jie-de-ji-suan-zhi-dao&quot;&gt;102 问题求解的计算之道&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;wen-ti-wei-zhi-de-shi-wu&quot;&gt;问题：未知的事物&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;人们在生活、生产、学习、探索、创造过程中会遇到各种未知的事物(what why how)
&lt;ul&gt;
&lt;li&gt;云是什么？&lt;&#x2F;li&gt;
&lt;li&gt;这种草（虫子）可以吃么？&lt;&#x2F;li&gt;
&lt;li&gt;什么是无理数？&lt;&#x2F;li&gt;
&lt;li&gt;什么事万物的起源？&lt;&#x2F;li&gt;
&lt;li&gt;为什么会下雨？&lt;&#x2F;li&gt;
&lt;li&gt;为什么事物放久了会发霉？&lt;&#x2F;li&gt;
&lt;li&gt;为什么✔️2是无理数？&lt;&#x2F;li&gt;
&lt;li&gt;生命的意义是什么？&lt;&#x2F;li&gt;
&lt;li&gt;怎么让粮食长得更多？&lt;&#x2F;li&gt;
&lt;li&gt;怎么将楼房建到101层？&lt;&#x2F;li&gt;
&lt;li&gt;怎么求最大公约数？&lt;&#x2F;li&gt;
&lt;li&gt;怎么维护公平与正义？&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wen-ti-jie-jue-zhi-dao&quot;&gt;问题解决之道&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;如何从未知到已知
&lt;ul&gt;
&lt;li&gt;感觉、经验、占卜、求神、逻辑、数学、实验、工程、计算模型、模拟、仿真哲学？&lt;&#x2F;li&gt;
&lt;li&gt;神农尝百草、部落战争占卜和求神、自然科学工程&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;有些问题已经解决&lt;&#x2F;li&gt;
&lt;li&gt;很多问题尚未解决&lt;&#x2F;li&gt;
&lt;li&gt;有些问题似乎无法完全解决&lt;&#x2F;li&gt;
&lt;li&gt;尚未解决和无法解决问题的共性
&lt;ul&gt;
&lt;li&gt;表述含混、标准不一、涉及主观、结果不确定&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shu-xue-jie-jue-wen-ti-de-zhong-ji-gong-ju&quot;&gt;数学：解决问题的终极工具&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;在长期的发展过程中，人们把已经解决的问题逐渐表述为属性命题与模型
&lt;ul&gt;
&lt;li&gt;尚未解决的问题，人们试图通过数学建模，采用数学工具来解决&lt;&#x2F;li&gt;
&lt;li&gt;无法解决的问题，人们试图转换表述、明晰问题来部分解决&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wei-shen-me-shi-shu-xue&quot;&gt;为什么是数学？&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;数学具有清晰明确的符号表述体系&lt;&#x2F;li&gt;
&lt;li&gt;严密确定的推理系统&lt;&#x2F;li&gt;
&lt;li&gt;但正如科学不是万能的，数学也不是万能的
&lt;ul&gt;
&lt;li&gt;有些问题天然无法明确表述（主观、价值观、意识形态、哲学问题等）&lt;&#x2F;li&gt;
&lt;li&gt;有些可明确表述的问题仍然无法解决&lt;&#x2F;li&gt;
&lt;li&gt;伽利略：数学是上帝书写宇宙的文字&lt;&#x2F;li&gt;
&lt;li&gt;Donald in Mathmagic Land.1959  （数学科普片）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wen-ti-jie-jue-de-ji-suan-zhi-dao&quot;&gt;问题解决的“计算”之道&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;20世纪20年代，为了解决数学本身的可检验性问题，大数学家希尔伯特提出“能否找到一种基于有穷观点的能行方法，来判定任何一个数学命题的真假”&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;chou-xiang-de-ji-suan-gai-nian-ti-chu&quot;&gt;抽象的“计算”概念提出&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;基于有穷观点的能行方法
&lt;ul&gt;
&lt;li&gt;由有限数量的明确有限指令构成&lt;&#x2F;li&gt;
&lt;li&gt;指令执行在有限步骤后终止&lt;&#x2F;li&gt;
&lt;li&gt;指令每次执行都总能得到唯一结果&lt;&#x2F;li&gt;
&lt;li&gt;原则上可以由人单独采用纸笔完成，而不依靠其他辅助&lt;&#x2F;li&gt;
&lt;li&gt;每条指令可以机械地被精确执行，而不需要智慧和灵感&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;guan-yu-ji-suan-de-shu-xue-mo-xing&quot;&gt;关于“计算”的数学模型&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;20世纪30年代，几位逻辑学家各自独立提出了几个关于“计算”的属性模型
&lt;ul&gt;
&lt;li&gt;哥德尔和克莱尼的递归函数模型&lt;&#x2F;li&gt;
&lt;li&gt;丘奇的Lambda演算模型&lt;&#x2F;li&gt;
&lt;li&gt;波斯特的Post机模型&lt;&#x2F;li&gt;
&lt;li&gt;图灵的图灵机模型&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;研究证明，这几个“基于有穷观点的能行方法”的计算模型，全都是等价的&lt;&#x2F;li&gt;
&lt;li&gt;虽然希尔伯特的计划最终被证明无法实现
&lt;ul&gt;
&lt;li&gt;不存在“能行方法”可判定所有数学命题的真假&lt;&#x2F;li&gt;
&lt;li&gt;总有数学命题，其真假是无法证明的&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;但“能行可计算”概念成为计算理论的基础
&lt;ul&gt;
&lt;li&gt;其中的一些数学模型（如图灵机）也成为现代计算机的理论基础&lt;&#x2F;li&gt;
&lt;li&gt;计算机是数学家一次失败思考的产物。 ——无名氏&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;103-tu-ling-ji-ji-suan-mo-xing&quot;&gt;103 图灵机计算模型&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;tu-ling-ji-turing-machine&quot;&gt;图灵机 Turing Machine&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;1936年，Alan Turing提出的一种抽象计算模型
&lt;ul&gt;
&lt;li&gt;基本思想是用机器模拟人们用纸笔进行数学运算的过程，但比数值计算更为简单&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tu-ling-ji-turing-machine-ji-ben-gai-nian&quot;&gt;图灵机 Turing Machine 基本概念&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;在纸上写上或擦除某个符号&lt;&#x2F;li&gt;
&lt;li&gt;把注意力从纸的一个位置转向另一个位置&lt;&#x2F;li&gt;
&lt;li&gt;在每个阶段，要决定下一步动作依赖于：
&lt;ul&gt;
&lt;li&gt;此人当前所关注的纸上某个位置的符号和&lt;&#x2F;li&gt;
&lt;li&gt;此人当前思维的状态&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;The.Imitation.Game.2014 (电影)&lt;&#x2F;li&gt;
&lt;li&gt;图灵机由以下几部分构成
&lt;ul&gt;
&lt;li&gt;一条无限长的分格纸带，每格可以记录1个符号&lt;&#x2F;li&gt;
&lt;li&gt;一个读写头，可在纸带上左右移动，能读出和擦写格子的字符&lt;&#x2F;li&gt;
&lt;li&gt;一个状态寄存器，记录有限状态中的1个状态&lt;&#x2F;li&gt;
&lt;li&gt;一系列有限的控制规则：（5个）
&lt;ul&gt;
&lt;li&gt;某个状态，读入某个字符时&lt;&#x2F;li&gt;
&lt;li&gt;要改写成什么字符&lt;&#x2F;li&gt;
&lt;li&gt;要如何移动读写头&lt;&#x2F;li&gt;
&lt;li&gt;要改变为什么状态&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;kan-yi-ge-tu-ling-ji-li-zi&quot;&gt;看一个图灵机例子&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;判定 {a^mb^m|m&amp;gt;=0} ：左半部全是a，右半部全是b，且ab数量相等的字符串
&lt;ul&gt;
&lt;li&gt;如：ab、aabb、aaaabbbb，进入“接受”状态&lt;&#x2F;li&gt;
&lt;li&gt;如：b、ba、abb，进入“拒绝”状态&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;规则思路：读写头来回移，将a和b一一对消，如果最后剩下空白B则接受，否则拒绝
&lt;ul&gt;
&lt;li&gt;初始状态s0是读写头停在第一个字符处&lt;&#x2F;li&gt;
&lt;li&gt;s1状态是读写头正在右移&lt;&#x2F;li&gt;
&lt;li&gt;s2状态是读写头道字符串最右边&lt;&#x2F;li&gt;
&lt;li&gt;s3状态是读写头正在向回左移&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;图灵机模拟软件 Visual Turing&lt;&#x2F;p&gt;
&lt;h2 id=&quot;104-suan-fa-he-ji-suan-fu-za-xing&quot;&gt;104 算法和计算复杂性&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;wen-ti-de-fen-lei&quot;&gt;问题的分类&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;What：是什么？
&lt;ul&gt;
&lt;li&gt;面向判断与分类的问题&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Why：为什么？
&lt;ul&gt;
&lt;li&gt;面向求因与证明的问题&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;How：怎么做？
&lt;ul&gt;
&lt;li&gt;面向过程与构建的问题&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ke-yi-tong-guo-ji-suan-jie-jue-de-wen-ti&quot;&gt;可以通过“计算”解决的问题&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;用任何一个“有限能行方法”下的计算模型可以解决的问题，都算是“可计算”的&lt;&#x2F;li&gt;
&lt;li&gt;What：分类问题
&lt;ul&gt;
&lt;li&gt;可以通过树状的判定分支解决&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Why：证明问题
&lt;ul&gt;
&lt;li&gt;可以通过有限的公式序列来解决&lt;&#x2F;li&gt;
&lt;li&gt;数学定理证明从不证自明的公理出发，一步步推理得出最后待证明的定理，我们在以往学习过的定理证明即为此类解决方法&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;How：过程问题
&lt;ul&gt;
&lt;li&gt;可以通过算法流程来解决&lt;&#x2F;li&gt;
&lt;li&gt;解决问题的过程：算法和相应数据结构的研究，即为本课主要内容&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shi-jie-shang-zui-zao-de-suan-fa-ou-ji-li-de-suan-fa&quot;&gt;世界上最早的算法：欧几里德算法&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;公元前3世纪，记载于《几何原本》
&lt;ul&gt;
&lt;li&gt;辗转相除法求最大公约数&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;辗转相除法处理大数时非常高效&lt;&#x2F;li&gt;
&lt;li&gt;它需要的步骤不会超过小数位数的5倍
&lt;ul&gt;
&lt;li&gt;加百利·拉梅(Gabriel Lame)于1844年证明了这个结论，并开创了计算复杂性理论&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ji-suan-fu-za-xing&quot;&gt;计算复杂性&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;“基于有穷观点的能行方法”的“可计算”概念
&lt;ul&gt;
&lt;li&gt;仅仅涉及到问题的解决是否能在有限资源内（时间&#x2F;空间）完成&lt;&#x2F;li&gt;
&lt;li&gt;并不关心具体要花费多少计算步骤或多少存储空间&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;由于资源（时间&#x2F;空间）相当有限，对于问题的解决需要考虑其可行性如何&lt;&#x2F;li&gt;
&lt;li&gt;人们发现各种不同的可计算问题，其难易程度是不一样的
&lt;ul&gt;
&lt;li&gt;有些问题非常容易解决，如基本数值计算&lt;&#x2F;li&gt;
&lt;li&gt;有些问题的解决程度尚能令人满意，如表达式求值、排序等&lt;&#x2F;li&gt;
&lt;li&gt;有些问题的解决会爆炸性地吞噬资源，虽有解法，但没什么可行性，如哈密顿回路、货郎担问题等&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;定义一些衡量指标，对问题的难易程度（所需的执行步骤数&#x2F;存储空间大小）进行分类，是计算复杂性理论的研究范围&lt;&#x2F;li&gt;
&lt;li&gt;但对于同一个问题，也会有不同的解决方案，其解决效率上也是千差万别&lt;&#x2F;li&gt;
&lt;li&gt;如排序问题，以n张扑克牌作为排序对象
&lt;ul&gt;
&lt;li&gt;一般人们会想到的是“冒泡“排序，即每次从牌堆里选出一张最小的牌，这样全部排完大概会需要n^2量级的比较次数&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;另一种有趣的”Bogo“排序方法
&lt;ul&gt;
&lt;li&gt;洗一次牌，看是否排好序，没有的话，接着洗牌，直到排序成功！这样全部排完，平均需要n^*n!量级的比较次数&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ji-suan-fu-za-xing-yu-suan-fa&quot;&gt;计算复杂性与算法&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;计算复杂性理论研究问题的本质，将各种问题按照其难易程度分类，研究各类问题的难度级别，并不关心解决问题的具体方案&lt;&#x2F;li&gt;
&lt;li&gt;而算法则研究问题在不同现实资源约束情况下的不同解决方案，致力于找到效率最高的方案
&lt;ul&gt;
&lt;li&gt;不同硬件配置（手持设备、PC设备、超级计算机）&lt;&#x2F;li&gt;
&lt;li&gt;不同运行环境（单机、多机环境、网络环境、小内存）&lt;&#x2F;li&gt;
&lt;li&gt;不同应用领域（消费、工业控制、医疗系统、航天领域）&lt;&#x2F;li&gt;
&lt;li&gt;甚至不同使用状况（正常状况、省电状况）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;如何对具体的算法进行分析，并用衡量指标评价其复杂度&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;bu-ke-ji-suan-wen-ti&quot;&gt;不可计算问题&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;有不少定义清晰，但无法解决的问题
&lt;ul&gt;
&lt;li&gt;并不是尚未找到解，而是在”基于有穷观点的能行方法“的条件下，已被证明并不存在解决方案&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;停机问题：判断任何一个程序在任何一个输入情况下是否能够停机 （不可计算 不可解的问题）&lt;&#x2F;li&gt;
&lt;li&gt;不可计算数：几乎所有的无理数，都无法通过算法来确定其任意一位是什么数字
&lt;ul&gt;
&lt;li&gt;可计算数很少：如圆周率Pi，自然对数的底e&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;似乎计算之道解决问题存在边界和极限？&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;105-tu-po-ji-suan-ji-xian&quot;&gt;105 突破计算极限&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;chao-da-gui-mo-fen-bu-shi-ji-suan&quot;&gt;超大规模分布式计算&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;SEIT@home 是一项利用全球联网计算机共同搜寻地外文明（SETI）的科学实验计划
&lt;ul&gt;
&lt;li&gt;项目组把射电望远镜采集到的海量信息分成一个个小数据包，发送到互联网上&lt;&#x2F;li&gt;
&lt;li&gt;每台安装了 SETI@home 软件的电脑都可以自动下载这些数据，以运行屏幕保护或者后台程序的方式参与数据分析。&lt;&#x2F;li&gt;
&lt;li&gt;从1999年5月开始，目前，有170万人、450万台计算机正在参加搜寻&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;SETI@home 从2005年开始并入BOINC平台&lt;&#x2F;li&gt;
&lt;li&gt;BOINC也是公众参与科学计算的超大型分布式系统，托管了众多学科的计算搜寻项目
&lt;ul&gt;
&lt;li&gt;天文、生命、数学、物理和化学问题&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;社会公众也能通过贡献计算力参与众包，进行科学探索&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;xin-xing-ji-suan-ji-shu-guang-zi-ji-suan&quot;&gt;新型计算技术：光子计算&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;用超微透镜取代晶体管、以光信号代替电信号进行运算&lt;&#x2F;li&gt;
&lt;li&gt;光芯片无需改变二进制计算机的软件原理，但可以轻易实现极高的运算频率，同时能耗非常低，不需要复杂的散热装置&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;xin-xing-ji-suan-ji-shu-dnaji-suan&quot;&gt;新型计算技术：DNA计算&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;以 DNA分子和酶的相互作用实现逻辑运算和数据存储，获得极高的计算并行度和存储能力。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;xin-xing-ji-suan-ji-shu-liang-zi-ji-suan&quot;&gt;新型计算技术：量子计算&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;利用量子力学态叠加原理，让信息单元处于多种可能性的叠加状态，从而实现指数级别的并行计算，根本上解决最高复杂度计算问题。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tu-po-ji-suan-ji-xian-fen-bu-shi-zhi-hui-zhong-bao&quot;&gt;突破计算极限：分布式智慧——众包&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;突破”基于有穷观点的能行方法“？
&lt;ul&gt;
&lt;li&gt;”如果无数多的猴子在无数多的打字机上随机地乱敲，并持续无限久的时间，那么在某个时候，必然有只猴子会打出莎士比亚的全部著作。”&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;如果是具有智慧和直觉的众多人脑一起来共同解决问题呢？&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;you-xi-hua-zhong-bao-xue-shu-yan-jiu&quot;&gt;游戏化众包学术研究&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;一篇有57000位作者的 Nature论文
&lt;ul&gt;
&lt;li&gt;《通过多人在线游戏预测蛋白质结构》2010.8&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;foldit-you-xi-hua-zhong-bao-dan-bai-zhi-jie-gou-fen-xi&quot;&gt;Foldit：游戏化众包蛋白质结构分析&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;多人在线游戏，众多玩家在给定一个目标蛋白的情况下，用各种氨基酸进行组装，最终拼凑出这个蛋白的完全体&lt;&#x2F;li&gt;
&lt;li&gt;玩家只需要掌握基本方块的拼插技巧，即可跟全世界众多玩家一起协同工作，攻克科研难题，有60万人玩过这个游戏&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;geng-duo-zhi-hui-zhong-bao-ke-yan-xiang-mu&quot;&gt;更多智慧众包科研项目&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;突破算法的约束
&lt;ul&gt;
&lt;li&gt;相比分布式计算的闲置计算力&lt;&#x2F;li&gt;
&lt;li&gt;革命性地利用了空闲智力&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;106-shen-me-shi-chou-xiang-he-shi-xian&quot;&gt;106 什么是抽象和实现&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ji-suan-ji-ke-xue-yan-jiu-shen-me&quot;&gt;计算机科学研究什么&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;计算机科学不仅仅是对计算机的研究
&lt;ul&gt;
&lt;li&gt;虽然计算机是非常重要的计算工具&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;计算机科学主要研究的是问题、问题解决过程、以及问题的解决方案
&lt;ul&gt;
&lt;li&gt;包括了前述的计算复杂性理论以及对算法的研究&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;chou-xiang-abstraction&quot;&gt;抽象（Abstraction）&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;为了更好地处理机器相关性或独立性，引入了“抽象”的概念&lt;&#x2F;li&gt;
&lt;li&gt;用以从“逻辑 Logical”或者“物理Physical”的不同层次上看待问题及解决方案&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shen-me-shi-chou-xiang-li-zi-qi-che&quot;&gt;什么是抽象？例子：汽车&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;从司机观点看来，汽车是一台可以带人去往目的地的代步工具
&lt;ul&gt;
&lt;li&gt;司机上车、点火、换挡、踩油门加速、刹车&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;从抽象角度说，司机看到汽车的“逻辑”层次
&lt;ul&gt;
&lt;li&gt;司机可以通过操作各个机构来达到运输的目的&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;这些操纵机构（方向盘、油门、档位）就称为“接口Interface”&lt;&#x2F;li&gt;
&lt;li&gt;而从汽车修理工的角度来看同一辆汽车，就会相当不同，他还需要清楚每项功能是如何实现的
&lt;ul&gt;
&lt;li&gt;如发动机工作原理，档位操作的机械结构，发动机舱内各处温度如何测量和控制等等&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;这些内部构造构成了汽车的“物理”层次&lt;&#x2F;li&gt;
&lt;li&gt;工作过程就称为“实现 Implementation”&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shen-me-shi-chou-xiang-li-zi-ji-suan-ji&quot;&gt;什么是抽象？例子：计算机&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;从一般大众用户观点看来，计算机可以用来编辑文档、收发邮件、上网聊天、处理照片等等&lt;&#x2F;li&gt;
&lt;li&gt;并不需要具备计算机内部如何处理的知识
&lt;ul&gt;
&lt;li&gt;利用这些功能是计算机的“逻辑”层次&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;而对于计算机科学家、程序员、技术支持、系统管理员来说&lt;&#x2F;li&gt;
&lt;li&gt;就必须要了解从硬件结构、操作系统原理到网络协议等各方面的低层次细节
&lt;ul&gt;
&lt;li&gt;内部如何实现，是计算机的“物理层次”&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;chou-xiang-fa-sheng-zai-ge-ge-bu-tong-ceng-ci-shang&quot;&gt;“抽象”发生在各个不同层次上&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;逻辑还是物理是一个相对的概念&lt;&#x2F;li&gt;
&lt;li&gt;即使对于程序员来说，使用编程语言进行编程，也会涉及到“抽象”&lt;&#x2F;li&gt;
&lt;li&gt;如计算一个数的平方根
&lt;ul&gt;
&lt;li&gt;程序员可以调用库函数 math.sqrt，直接得到结果，而无需关系起内部是如何实现&lt;&#x2F;li&gt;
&lt;li&gt;这种功能上的“黑盒子”称作“过程抽象 Procedural Abstraction”&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;math
&lt;&#x2F;span&gt;&lt;span&gt;math.sqrt(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# 4.0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;chou-xiang-yu-shi-xian-bian-cheng&quot;&gt;抽象与实现：编程&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;编程是通过一种程序设计语言，将抽象的算法实现为计算机可以执行的代码的过程
&lt;ul&gt;
&lt;li&gt;没有算法，编程无从谈起&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;图灵奖获得者Niklaus Wirth 的著名公式：算法 + 数据结构 = 程序
&lt;ul&gt;
&lt;li&gt;此公式相当于物理中的 E=mc²&lt;&#x2F;li&gt;
&lt;li&gt;Pascal 语言设计者&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cheng-xu-she-ji-yu-yan-shi-xian-suan-fa-de-ji-ben-ji-zhi&quot;&gt;程序设计语言实现算法的基本机制&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;程序设计语言需要为算法的实现提供实现“过程”和“数据”的机制
&lt;ul&gt;
&lt;li&gt;具体表现为“控制结构”和“数据类型”&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;程序设计语言均有语句对应控制结构
&lt;ul&gt;
&lt;li&gt;顺序处理、分支选择、循环迭代&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;程序设计语言也提供最基本的数据类型来表示数据，如整数、字符等
&lt;ul&gt;
&lt;li&gt;但对于复杂的问题而言，直接使用这些基本数据类型不利于算法的表达&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;107-wei-shen-me-yan-jiu-shu-ju-jie-gou-yu-suan-fa&quot;&gt;107 为什么研究数据结构与算法&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;qing-xi-gao-xiao-di-biao-da-suan-fa&quot;&gt;清晰高效地表达算法&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;为了控制问题和问题解决过程的复杂度，利用抽象来保持问题的“整体感”。而不会陷入到过多的细节中去&lt;&#x2F;li&gt;
&lt;li&gt;这要求对现实问题进行建模的时候，对算法所要处理的数据，也要保持与问题本身的一致性，不要有太多与问题无关的细节&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;系统 问题&lt;&#x2F;p&gt;
&lt;p&gt;子系统 子问题  子问题&lt;&#x2F;p&gt;
&lt;p&gt;模块 步骤 1  步骤2  步骤&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shu-ju-chou-xiang-adt-chou-xiang-shu-ju-lei-xing&quot;&gt;数据抽象：ADT 抽象数据类型&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;“过程抽象” 启发我们进行“数据抽象”&lt;&#x2F;li&gt;
&lt;li&gt;相对于程序设计语言中基本数据类型，抽象数据类型（ADT:Abstract Data Type）
&lt;ul&gt;
&lt;li&gt;ADT 是对数据进行处理的一种逻辑描述，并不涉及如何实现这些处理&lt;&#x2F;li&gt;
&lt;li&gt;用户 接口 实现 操作&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;抽象数据类型ADT建立了一种对数据的“封装 Encapsulation”
&lt;ul&gt;
&lt;li&gt;封装技术将可能得处理实现细节隐蔽起来能有效控制算法的复杂度&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shu-ju-jie-gou-shi-dui-adtde-ju-ti-shi-xian&quot;&gt;数据结构是对ADT的具体实现&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;同一ADT可以采用不同的数据结构来实现&lt;&#x2F;li&gt;
&lt;li&gt;采用程序设计语言的控制结构和基本数据类型来实现ADT所提供的逻辑接口
&lt;ul&gt;
&lt;li&gt;属于ADT的“物理”层次&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;adt-shu-ju-jie-gou-data-structure&quot;&gt;ADT：数据结构Data Structure&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;对数据实现“逻辑”层次和“物理”层次的分离，可以定义复杂的数据模型来解决问题，而不需要立即考虑此模型如何实现&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jie-kou-de-liang-duan-chou-xiang-yu-shi-xian&quot;&gt;接口的两端：抽象与实现&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;如电动车与汽油车
&lt;ul&gt;
&lt;li&gt;底层动力、能源都不同&lt;&#x2F;li&gt;
&lt;li&gt;但开车的操作接口（方向盘、油门、刹车、档位）基本都是相同的&lt;&#x2F;li&gt;
&lt;li&gt;司机无需重新考驾照，而车厂可以持续改进实现技术&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;由于对抽象数据类型可以有多种实现方案&lt;&#x2F;li&gt;
&lt;li&gt;独立于实现的数据模型
&lt;ul&gt;
&lt;li&gt;让底层开发程序员专注于实现和优化数据处理，又不改变数据的使用接口&lt;&#x2F;li&gt;
&lt;li&gt;让用户专注于用数据接口来进行问题的解决，而无需考虑如何具体实现这些接口&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;通过层次抽象，降低问题解决过程的复杂度&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wei-shen-me-yao-yan-jiu-he-xue-xi-suan-fa&quot;&gt;为什么要研究和学习算法&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;首先，学习各种不同问题的解决方案
&lt;ul&gt;
&lt;li&gt;有助于我们在面对未知问题的时候，能够根据类似问题的解决方案来更好解决&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;其次，各种算法通常有较大差异
&lt;ul&gt;
&lt;li&gt;我们可以通过算法分析技术来评判算法本身特性&lt;&#x2F;li&gt;
&lt;li&gt;而不仅仅根据实现算法的程序在特定机器和特定数据上运行的表现来评判他&lt;&#x2F;li&gt;
&lt;li&gt;即使同一个程序，在不同的运行环境和输入数据的情况下，其表现的差异可能也会很大&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;在某些情况下，当我们碰到棘手的难题
&lt;ul&gt;
&lt;li&gt;得能区分这种问题是根本不存在算法&lt;&#x2F;li&gt;
&lt;li&gt;还是能找到算法，但需要耗费大量的资源&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;某些问题解决需要一些折衷的处理方式
&lt;ul&gt;
&lt;li&gt;我们需要学会在不同算法之间进行选择，以适合当前条件的要求&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;108-cong-czhuan-huan-dao-python&quot;&gt;108 从C转换到Python&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;cong-ji-gai-c-zhuan-shu-suan-python&quot;&gt;从 计概C 转 数算Python&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;从Hello World 开始&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;c-hello-world&quot;&gt;C：Hello World&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; say hello
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Hello World!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;1- Compile 编译到机器码&lt;&#x2F;p&gt;
&lt;p&gt;2- Link 与各种库链接&lt;&#x2F;p&gt;
&lt;p&gt;3- Execute 执行目标程序&lt;&#x2F;p&gt;
&lt;h3 id=&quot;python-hello-world&quot;&gt;Python：Hello World&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;font-style:italic;color:#f92672;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# say hello
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;main()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;1- Run! 跑代码&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# say hello
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;main 都是太啰嗦，一行OK&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;帮高斯的同学回家&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; s, i;
&lt;&#x2F;span&gt;&lt;span&gt;  s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; adding numbers i to 100
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;; i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;(i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Sum= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, s);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Python ：也帮高斯的同学回家&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;# adding numbers 1 to 100
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;  s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span&gt;(i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Sum=&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, s)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;检验素数&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;lt;math.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; n, i, flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Please input number:&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;scanf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt;n);  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; 输入
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;sqrt&lt;&#x2F;span&gt;&lt;span&gt;(n); i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&#x2F;&#x2F; sqrt 开平方
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;      flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;break&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(flag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; is NOT a prime number.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, n);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; is a prime number.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, n);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Python：检验素数&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;math &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;sqrt
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Please input number:&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(sqrt(n))):
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;{n}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; is NOT a prime number.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;{n}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; is a prime number.&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;打印一个朴素的三角形&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; n, i, j;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Please input number:&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;scanf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt;n);
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; n; i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;; j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt; i; j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;*&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Python：打印一个朴素的三角形&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#66d9ef;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;Please input number:&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(n):
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&amp;quot;*&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;i)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;进一步洗白
&lt;ul&gt;
&lt;li&gt;从c口音转到Python不太容易&lt;&#x2F;li&gt;
&lt;li&gt;&amp;lt;地空数算的PyLn编程学习平台  &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;gis4g.pku.edu.cn&quot;&gt;http:&#x2F;&#x2F;gis4g.pku.edu.cn&lt;&#x2F;a&gt;&amp;gt;&lt;&#x2F;li&gt;
&lt;li&gt;B站学习 &lt;strong&gt;av87882118&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;人生苦短我用Python&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Shortcodes</title>
        <published>2022-10-20T00:00:00+00:00</published>
        <updated>2022-10-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Paxon Qiao
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://qiaopengjun5162.github.io/shortcodes/"/>
        <id>https://qiaopengjun5162.github.io/shortcodes/</id>
        
        <content type="html" xml:base="https://qiaopengjun5162.github.io/shortcodes/">&lt;p&gt;The Kita theme providers multiple shortcodes.&lt;&#x2F;p&gt;
&lt;p&gt;Never heard of shortcodes? See &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;content&#x2F;shortcodes&#x2F;&quot;&gt;Zola documentation&lt;&#x2F;a&gt; for more information.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;mermaid&quot;&gt;Mermaid&lt;&#x2F;h2&gt;
&lt;p&gt;To use Mermaid in your page, you have to set &lt;code&gt;extra.mermaid = true&lt;&#x2F;code&gt; in the frontmatter of page.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-markdown &quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;span&gt;title = &amp;quot;Your page title&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[extra]
&lt;&#x2F;span&gt;&lt;span&gt;mermaid = true
&lt;&#x2F;span&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then you can use the &lt;code&gt;mermaid()&lt;&#x2F;code&gt; shortcodes like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-markdown &quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span&gt;{% mermaid() %}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;graph TD;
&lt;&#x2F;span&gt;&lt;span&gt;A--&amp;gt;B;
&lt;&#x2F;span&gt;&lt;span&gt;A--&amp;gt;C;
&lt;&#x2F;span&gt;&lt;span&gt;B--&amp;gt;D;
&lt;&#x2F;span&gt;&lt;span&gt;C--&amp;gt;D;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% end %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This will be rendered as:&lt;&#x2F;p&gt;
&lt;pre class=&quot;mermaid bg-inherit&quot;&gt;
  graph TD;
A--&amp;gt;B;
A--&amp;gt;C;
B--&amp;gt;D;
C--&amp;gt;D;
&lt;&#x2F;pre&gt;
&lt;p&gt;In addition, you can use code block inside &lt;code&gt;mermaid()&lt;&#x2F;code&gt; shortcodes and the code block will be ignored.&lt;&#x2F;p&gt;
&lt;p&gt;The code block prevents formatter from breaking mermaid’s formatting.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-markdown &quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span&gt;{% mermaid() %}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;```&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;mermaid
&lt;&#x2F;span&gt;&lt;span&gt;sequenceDiagram
&lt;&#x2F;span&gt;&lt;span&gt;    participant Alice
&lt;&#x2F;span&gt;&lt;span&gt;    participant Bob
&lt;&#x2F;span&gt;&lt;span&gt;    Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
&lt;&#x2F;span&gt;&lt;span&gt;    loop Healthcheck
&lt;&#x2F;span&gt;&lt;span&gt;        John-&amp;gt;&amp;gt;John: Fight against hypochondria
&lt;&#x2F;span&gt;&lt;span&gt;    end
&lt;&#x2F;span&gt;&lt;span&gt;    Note right of John: Rational thoughts &amp;lt;br&#x2F;&amp;gt;prevail!
&lt;&#x2F;span&gt;&lt;span&gt;    John--&amp;gt;&amp;gt;Alice: Great!
&lt;&#x2F;span&gt;&lt;span&gt;    John-&amp;gt;&amp;gt;Bob: How about you?
&lt;&#x2F;span&gt;&lt;span&gt;    Bob--&amp;gt;&amp;gt;John: Jolly good!
&lt;&#x2F;span&gt;&lt;span&gt;```
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% end %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This will be rendered as:&lt;&#x2F;p&gt;
&lt;pre class=&quot;mermaid bg-inherit&quot;&gt;
  
sequenceDiagram
    participant Alice
    participant Bob
    Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
    loop Healthcheck
        John-&amp;gt;&amp;gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts &amp;lt;br&amp;#x2F;&amp;gt;prevail!
    John--&amp;gt;&amp;gt;Alice: Great!
    John-&amp;gt;&amp;gt;Bob: How about you?
    Bob--&amp;gt;&amp;gt;John: Jolly good!

&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;admonition&quot;&gt;Admonition&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;code&gt;admonition()&lt;&#x2F;code&gt; shortcode displays a banner to help you put notice in your page.&lt;&#x2F;p&gt;
&lt;p&gt;You can use the &lt;code&gt;admonition()&lt;&#x2F;code&gt; shortcode like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-markdown &quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span&gt;{% admonition(type=&amp;quot;tip&amp;quot;, title=&amp;quot;tip&amp;quot;) %}
&lt;&#x2F;span&gt;&lt;span&gt;The `tip` admonition.
&lt;&#x2F;span&gt;&lt;span&gt;{% end %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The admonition shortcode has 12 different types:&lt;&#x2F;p&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(68, 138, 255, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;note.svg)&quot;
    &gt;
      note
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;note&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;note&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(0, 176, 255, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;abstract.svg)&quot;
    &gt;
      abstract
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;abstract&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;abstract&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(83, 211, 230, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;info.svg)&quot;
    &gt;
      info
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;info&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;info&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(0, 191, 165, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;tip.svg)&quot;
    &gt;
      tip
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;tip&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;tip&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(0, 200, 83, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;success.svg)&quot;
    &gt;
      success
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;success&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;success&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(100, 221, 23, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;question.svg)&quot;
    &gt;
      question
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;question&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;question&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(255, 145, 0, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;warning.svg)&quot;
    &gt;
      warning
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;warning&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;warning&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(255, 82, 82, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;failure.svg)&quot;
    &gt;
      failure
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;failure&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;failure&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(0, 176, 255, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;abstract.svg)&quot;
    &gt;
      abstract
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;danger&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;danger&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(255, 23, 68, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;bug.svg)&quot;
    &gt;
      bug
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;bug&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;bug&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(101, 31, 255, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;example.svg)&quot;
    &gt;
      example
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;example&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;example&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
 &lt;!----&gt;


&lt;div
  class=&quot;my-4 flex flex-col rounded-lg bg-[var(--admonition-bg)]&quot;
  style=&quot;--admonition-bg: rgba(159, 159, 159, 0.1)&quot;
&gt;
  &lt;div class=&quot;flex items-center rounded-t-lg bg-[var(--admonition-bg)] p-1&quot;&gt;
    &lt;div
      class=&quot;mx-2 h-4 w-4 text-[0] [background:var(--url)_center_center_no-repeat] dark:invert&quot;
      style=&quot;--url: url(.&#x2F;icons&#x2F;quote.svg)&quot;
    &gt;
      quote
    &lt;&#x2F;div&gt;
    &lt;span&gt;&lt;strong&gt;quote&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;pl-4&quot;&gt;&lt;p&gt;The &lt;code&gt;quote&lt;&#x2F;code&gt; admonition.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;gallery&quot;&gt;Gallery&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;code&gt;gallery()&lt;&#x2F;code&gt; shortcode is very simple html-only clickable picture gallery that displays all images from the page assets.&lt;&#x2F;p&gt;
&lt;p&gt;It’s from &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;content&#x2F;image-processing&#x2F;&quot;&gt;Zola documentation&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; style=&quot;background-color:#272822;color:#f8f8f2;&quot; class=&quot;language-markdown &quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span&gt;{{ gallery() }}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;div class=&quot;not-prose flex flex-wrap gap-2&quot;&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  
  &lt;a href=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;shortcodes&#x2F;01-zola.png&quot; target=&quot;_blank&quot;&gt;
    &lt;img class=&quot;rounded-lg&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;qiaopengjun5162.github.io&amp;#x2F;processed_images&amp;#x2F;01-zola.7c3a26eed1c7ab5f.png&quot; &#x2F;&gt;
  &lt;&#x2F;a&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  
  &lt;a href=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;shortcodes&#x2F;02-zola-manet.png&quot; target=&quot;_blank&quot;&gt;
    &lt;img class=&quot;rounded-lg&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;qiaopengjun5162.github.io&amp;#x2F;processed_images&amp;#x2F;02-zola-manet.e4241a911597aca7.png&quot; &#x2F;&gt;
  &lt;&#x2F;a&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  
  &lt;a href=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;shortcodes&#x2F;03-zola-cezanne.png&quot; target=&quot;_blank&quot;&gt;
    &lt;img class=&quot;rounded-lg&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;qiaopengjun5162.github.io&amp;#x2F;processed_images&amp;#x2F;03-zola-cezanne.6a107e2be8013406.png&quot; &#x2F;&gt;
  &lt;&#x2F;a&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  
  &lt;a href=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;shortcodes&#x2F;04-gutenberg.jpg&quot; target=&quot;_blank&quot;&gt;
    &lt;img class=&quot;rounded-lg&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;qiaopengjun5162.github.io&amp;#x2F;processed_images&amp;#x2F;04-gutenberg.faa753e9bf9c7908.jpg&quot; &#x2F;&gt;
  &lt;&#x2F;a&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  
  &lt;a href=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;shortcodes&#x2F;05-example.jpg&quot; target=&quot;_blank&quot;&gt;
    &lt;img class=&quot;rounded-lg&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;qiaopengjun5162.github.io&amp;#x2F;processed_images&amp;#x2F;05-example.ae15f30d897ab593.jpg&quot; &#x2F;&gt;
  &lt;&#x2F;a&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  
  &lt;a href=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;shortcodes&#x2F;06-example.jpg&quot; target=&quot;_blank&quot;&gt;
    &lt;img class=&quot;rounded-lg&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;qiaopengjun5162.github.io&amp;#x2F;processed_images&amp;#x2F;06-example.c154d01e3ae79960.jpg&quot; &#x2F;&gt;
  &lt;&#x2F;a&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  
  &lt;a href=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;shortcodes&#x2F;07-example.jpg&quot; target=&quot;_blank&quot;&gt;
    &lt;img class=&quot;rounded-lg&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;qiaopengjun5162.github.io&amp;#x2F;processed_images&amp;#x2F;07-example.0bae5e2aea7a32b4.jpg&quot; &#x2F;&gt;
  &lt;&#x2F;a&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  &lt;!----&gt;
  
  &lt;a href=&quot;https:&#x2F;&#x2F;qiaopengjun5162.github.io&#x2F;shortcodes&#x2F;08-example.jpg&quot; target=&quot;_blank&quot;&gt;
    &lt;img class=&quot;rounded-lg&quot; src=&quot;https:&amp;#x2F;&amp;#x2F;qiaopengjun5162.github.io&amp;#x2F;processed_images&amp;#x2F;08-example.5c0108fc0d117d1c.jpg&quot; &#x2F;&gt;
  &lt;&#x2F;a&gt;
  &lt;!----&gt;
  
&lt;&#x2F;div&gt;
</content>
        
    </entry>
</feed>
